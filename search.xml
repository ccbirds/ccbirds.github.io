<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>集成电路设计笔记（七）基于IC617UVLO设计</title>
      <link href="/ICnotes7/"/>
      <url>/ICnotes7/</url>
      
        <content type="html"><![CDATA[<h3 id="1-什么是UVLO"><a href="#1-什么是UVLO" class="headerlink" title="1. 什么是UVLO"></a>1. 什么是UVLO</h3><hr><p>欠压锁定（Undervoltage-Lockout）简称UVLO，是电子设备中在电源电压低于正常工程准位时，切断电源的电路。在嵌入式系统中常会用UVLO监控电池电压，若电压低于一定值，会直接切断电源，保护嵌入式系统的电路。 </p><p>许多电子设备中都有UVLO的功能，例如在镇流器中就有UVLO电路，若电压过低时直接切断电源。</p><a id="more"></a><p>UVLO就是低电压锁定； 低压关断. 欠压关断模式是当供电电压低于IC的开启门限电压时的一种保护模式。欠压关断模式可保证IC在供电电压不足时不致于被损坏。一个低电压锁定（UVLO）电路可确保IC在电池电压未达到安全操作电压前不会激活，UVLO的功能会展示滞后现象，以确保在电源供应上的噪音不会不慎导致系统故障。</p><p>UVLO的迟滞功能是防止电压在UVLO那一点的时候，出现振荡，所以加个迟滞.</p><p>为了更稳定的工作，某些 DC/DC 转换器具有 UVLO（欠压锁定）功能。电源开启后，UVLO 功能使内部电路处于待机状态，直到DC/DC 转换器的输入电压（VIN）达到 UVLO 电压，以此来减少消费电流并避免误操作。</p><hr><h3 id="2-简单UVLO设计"><a href="#2-简单UVLO设计" class="headerlink" title="2. 简单UVLO设计"></a>2. 简单UVLO设计</h3><hr><p>设计要求：3.3V电源电压，低电压2.8V关断，高电压3.0V启动</p><p>下图为电路原理图</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/71.png" alt></p><p>UVLO电路，迟滞比较器为电路核心。当电源电压由0V增加到5V时，在未正常工作前，放大器输出为低电平，经反向为高电平，使PM0关闭，</p><p>$$V_{in+}=V_{cc}*\frac{R1}{R1+R2}$$</p><p>当电源电压由5V减小为0V时，在关闭电源前，放大器输出为高电平，经反向为低电平。使得PM0导通。此时VIN+的电压为</p><p>$$V_{in+}=V_{cc}*\frac{R1}{R1+R2//R3}$$</p><p>根据要求，电源电压低于2.8V，系统关闭。电源电压高于3.0V系统打开。</p><p>仿真结果如图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/72.png" alt></p><p>电压降低时，低于2.8V后，电源关断。电压升高到3.0V时，电源启动。</p><p>简单UVLO完成了</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> ADE仿真 </tag>
            
            <tag> UVLO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路设计笔记（六）基于IC617设计运算放大器</title>
      <link href="/ICnotes6/"/>
      <url>/ICnotes6/</url>
      
        <content type="html"><![CDATA[<h3 id="1-什么是运放？"><a href="#1-什么是运放？" class="headerlink" title="1. 什么是运放？"></a>1. 什么是运放？</h3><hr><p>运算放大器（简称“运放”）是具有很高放大倍数的电路单元。在实际电路中，通常结合反馈网络共同组成某种功能模块。它是一种带有特殊耦合电路及反馈的放大器。其输出信号可以是输入信号加、减或微分、积分等数学运算的结果。是电路中的一个常用结构。</p><p>运放的结构多种多样，本文记录一种简单的结构</p><a id="more"></a><hr><h3 id="2-运放原理"><a href="#2-运放原理" class="headerlink" title="2. 运放原理"></a>2. 运放原理</h3><hr><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/61.png" alt></p><p>运放的原理图如上图所示，上方四个PMOS为电流镜，为电路中其他部分提供电流，PM1为电流镜的参考电流。PM4和PM5为养分输入部分，放大差模信号抑制共模信号，在其下方的两个NMOS（NM2和NM3）为一对电流镜，将双端输出复制到单端，并作为差分输入的有源负载。NM4是电路的第二级放大。其上方的电阻和电容用来米勒补偿，调节电路的相位裕度，提高稳定性。最左的NM0和NM1与电阻为电路中的负反馈，稳定电路中各支路的电流。</p><hr><h3 id="3-各性能参数测量"><a href="#3-各性能参数测量" class="headerlink" title="3. 各性能参数测量"></a>3. 各性能参数测量</h3><hr><h4 id="3-1-DC差模"><a href="#3-1-DC差模" class="headerlink" title="3.1 DC差模"></a>3.1 DC差模</h4><p>用来观察电路直流状态下的工作情况，测试电路如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/62.png" alt></p><p>测试结果如下图所示，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/63.png" alt></p><p>增益达到的500倍，输出是0V的3V。</p><h4 id="3-2-交流小信号分析"><a href="#3-2-交流小信号分析" class="headerlink" title="3.2 交流小信号分析"></a>3.2 交流小信号分析</h4><p>观察其在交流状态下的增益和相位情况，相位裕度决定系统的稳定性。</p><p>测试电路如图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/64.png" alt></p><p>测试结果如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/65.png" alt></p><p>相位裕度64度，增益最大95dB，0dB带宽为1.6MHz</p><h4 id="3-3-CMRR"><a href="#3-3-CMRR" class="headerlink" title="3.3 CMRR"></a>3.3 CMRR</h4><p>什么是CMRR？技术定义是差分增益与共模增益的比率，但这不能告诉我们过多的实际应用。共模输入电压影响输入差分对的偏置点。由于输入电路中固有的不匹配，改变偏置点会改变输入失调电压（VOS），从而改变输出电压。换句话说，当您更改共模电压时，您将看到输入失调电压的变化。CMRR告诉您这种变化会有多大。</p><p>测试电路如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/66.png" alt></p><p>测试结果如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/67.png" alt></p><p>CMRR最高为103dB</p><p>####　3.4 PSRR</p><p>电源纹波抑制比(PSRR)是输入电源变化量（以伏为单位）与转换器输出变化量（以伏为单位）的比值，常用分贝表示。对于高质量的D/A转换器，要求开关电路及运算放大器所用的电源电压发生变化时，对输出的电压影响极小。通常把满量程电压变化的百分数与电源电压变化的百分数之比称为电源纹波抑制比.</p><p>测试电路如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/68.png" alt></p><p>测试结果如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/69.png" alt></p><p>PSRR最大为87dB。</p><h4 id="3-5-摆率"><a href="#3-5-摆率" class="headerlink" title="3.5 摆率"></a>3.5 摆率</h4><p>运放接成闭环条件下，将一个大信号（含阶跃信号）输入到运放的输入端，从运放的输出端测得运放的输出上升速率。由于在转换期间，运放的输入级处于开关状态，所以运放的反馈回路不起作用，也就是转换速率与闭环增益无关。</p><p>测试电路如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/610.png" alt></p><p>测试结果如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/611.png" alt></p><p>摆率为0.318V/us</p><hr><h3 id="4-参数列表"><a href="#4-参数列表" class="headerlink" title="4. 参数列表"></a>4. 参数列表</h3><hr><table><thead><tr><th align="center">项目</th><th align="center">参数</th></tr></thead><tbody><tr><td align="center">作者</td><td align="center">ccbirds</td></tr><tr><td align="center">增益</td><td align="center">95dB</td></tr><tr><td align="center">PSRR</td><td align="center">87dB</td></tr><tr><td align="center">CMRR</td><td align="center">205dB</td></tr><tr><td align="center">3dB</td><td align="center">32Hz</td></tr><tr><td align="center">0dB</td><td align="center">1.6MHz</td></tr><tr><td align="center">相位裕度</td><td align="center">65deg</td></tr><tr><td align="center">摆率</td><td align="center">318V/ms</td></tr><tr><td align="center">功耗</td><td align="center">12.9uW</td></tr><tr><td align="center">差模输入范围</td><td align="center">6mV</td></tr><tr><td align="center">差模输出范围</td><td align="center">3V</td></tr><tr><td align="center">共模输入范围</td><td align="center">90mV</td></tr><tr><td align="center">共模输出范围</td><td align="center">1V</td></tr></tbody></table><hr><p>简单运放的设计完成了。</p><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> ADE仿真 </tag>
            
            <tag> 运算放大器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路设计笔记（五）基于IC617共漏极放大器</title>
      <link href="/ICnotes55/"/>
      <url>/ICnotes55/</url>
      
        <content type="html"><![CDATA[<p>本文主要记录共漏极放大器的原理与仿真验证</p><hr><h3 id="1-原理"><a href="#1-原理" class="headerlink" title="1. 原理"></a>1. 原理</h3><hr><p>电路结构如图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/551.png" alt></p><a id="more"></a><p>当$V_{in}&lt;V_{TH}$时，M1处于截止状态，$V_{out}$等于零。</p><p>$V_{in}$增大超过$V_{TH}$时，M1导通进入饱和区。</p><p>$V_{in}$进一步增大，$V_{out}$随$V_{in}$变化，且之差为$V_{GS}$</p><p>$$R_{in}=\infty$$</p><p>$$A_V=\frac{v_{out}}{v_{in}}=\frac{r_o//R_L}{\frac{1}{g_m}+r_o//R_L}\approx \frac{g_mR_L}{1+g_mR_L}&lt;1$$</p><p>$$R_{out}=\frac{1}{g_m}//(r_o//R_l)\approx \frac{R_L}{1+g_mRL}$$</p><p>增益较低，趋于一，电流驱动能力较强，可作为运放的最后一级。</p><hr><h3 id="2-直流仿真验证"><a href="#2-直流仿真验证" class="headerlink" title="2. 直流仿真验证"></a>2. 直流仿真验证</h3><hr><p>原理图如图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/552.png" alt></p><p>ADE设置如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/553.png" alt></p><p>DC仿真结果如下图所示，增益近乎为1，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/554.png" alt></p><hr><h3 id="3-瞬态仿真"><a href="#3-瞬态仿真" class="headerlink" title="3. 瞬态仿真"></a>3. 瞬态仿真</h3><hr><p>将直流源更换为交流源。结果如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/555.png" alt></p><p>交流源设置如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/556.png" alt></p><p>结果如图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/557.png" alt></p><hr><h3 id="4-交流小信号"><a href="#4-交流小信号" class="headerlink" title="4. 交流小信号"></a>4. 交流小信号</h3><hr><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/558.png" alt></p><p>因为增益小于1，所示交流增益小于0dB。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> ADE仿真 </tag>
            
            <tag> 共漏极放大器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路设计笔记（五）基于IC617带源极负反馈的共源级的放大器</title>
      <link href="/ICnotes54/"/>
      <url>/ICnotes54/</url>
      
        <content type="html"><![CDATA[<p>本文主要记录带源极负反馈的共源级的放大器的原理及仿真验证</p><hr><h3 id="1-原理"><a href="#1-原理" class="headerlink" title="1. 原理"></a>1. 原理</h3><hr><p>电路如图所示，$R_S$为源极反馈电阻</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs51.png" alt></p><p>交流小信号如图所示</p><a id="more"></a><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs52.png" alt></p><p>$$V_1=-I_xR_s$$</p><p>$$I_x-(g_m+g_{mb})V_1=I_x+(g_m+g_{mb})R_sIx$$</p><p>$$V_x=r_o[I_x+(g_m+g_{mb})R_sI_x]+I_xR_s$$</p><p>$$R_{out}=V_x/I_x=[I+(g_m+g_{mb})R_s]r_o+R_s=[1+(g_m+g_{mb})r_o]R_s+r_o$$</p><p>因为$(g_m+g_{mb})r_o&gt;&gt;I$</p><p>所以$$R_{out}\approx[1+(g_m+g_{mb})R_s]r_o$$</p><p>$$I_{out}=g_mV_1+g_{mb}V_{bs}+I_{ro}=g_mV_1-g_{mb}V_x-\frac{I_{out}R_s}{r_o}=g_m(V_{in}-I_{out}R_s)+g_{mb}(-I_{out}R_s)-\frac{I_{out}R_s}{r_o}$$</p><p>可得到</p><p>$$G_m=\frac{I_{out}}{V_{in}}=\frac{g_mr_o}{R_s+[1+(g_m+g_{mb})R_s]r_o}$$</p><p>$$R_{out}=[1+(g_m+G_{mb})r_o]R_s+r_o$$</p><p>可得增益为</p><p>$$A_V=-G_m(R_D//R_{out})$$</p><p>如果忽略沟道长度调制效应和衬底偏置效应，则</p><p>交流小信号等效模型如图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs53.png" alt></p><p>$$V_{in}-V_1=g_mR_sV_1$$</p><p>$$I_{out}=g_mV_1$$</p><p>$$G_m=\frac{g_m}{1+g_mR_s}$$</p><p>$$R_{out}=R_D$$</p><p>$$A_V=-G_mR_{out}=-\frac{g_mR_D}{1+g_mR_s}=-\frac{R_D}{\frac{1}{g_M}+R_S}\approx -\frac{R_D}{R_S}$$</p><p>可知，增益与两电阻的阻值有关。</p><p>由于有源极负反馈，放大倍数不高。而且放大倍数与电阻有关，在电路中电阻越大，占有面积越大。</p><hr><h3 id="2-直流仿真验证"><a href="#2-直流仿真验证" class="headerlink" title="2. 直流仿真验证"></a>2. 直流仿真验证</h3><hr><p>原理图如图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs54.png" alt></p><p>将栅极电压和两个电阻均设置为变量，</p><p>变量初始值如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs55.png" alt></p><p>进行直流仿真结果，如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs56.png" alt></p><p>可知，放大倍数小，摆幅小。是因为两个电阻的比值小。</p><p>下面我们增大RD来看看，曲线的变化 。</p><p>打开参数扫描，如下图设置</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs57.png" alt></p><p>开始仿真，如图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs58.png" alt></p><p>RD电阻越大，增益越大。</p><p><em>关于，参数扫描。在参数扫描中设置的变量可以认为是第二变量，仿真后的曲线为ADE中设置的变量，在参数扫描中的变量会以多条曲线的形式画出来，仿真的步数等于曲线的条数。</em></p><p>我们设置RD的阻值为50K，来进行下面的仿真验证。DC仿真如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs59.png" alt></p><hr><h3 id="3-瞬态仿真验证"><a href="#3-瞬态仿真验证" class="headerlink" title="3. 瞬态仿真验证"></a>3. 瞬态仿真验证</h3><hr><p>将信号源更改为正弦信号，并按下图设置</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs510.png" alt></p><p>仿真结果如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs511.png" alt></p><p>可知，电路正常放大，无失真</p><hr><h3 id="4-交流小信号仿真"><a href="#4-交流小信号仿真" class="headerlink" title="4. 交流小信号仿真"></a>4. 交流小信号仿真</h3><hr><p>设置AC仿真，频率范围设置为1K—10G</p><p>结果如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs512.png" alt></p><p>可知，增益并不高。</p><p>原理仿真就完事啦，欢迎大家留言讨论。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> ADE仿真 </tag>
            
            <tag> 共源极放大器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路设计学习笔记（五）基于IC617的电流源负载的共源极放大器</title>
      <link href="/ICnotes52/"/>
      <url>/ICnotes52/</url>
      
        <content type="html"><![CDATA[<p>本文记录电流源负载的共源极放大器。</p><hr><h3 id="1-基本原理"><a href="#1-基本原理" class="headerlink" title="1.基本原理"></a>1.基本原理</h3><hr><p>基本电路结构如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs31.png" alt></p><a id="more"></a><p>交流小信号模型如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs32.png" alt></p><p>输出电阻是</p><p>$$R_{out}=r_{O1}//r_{O2}$$</p><p>增益为</p><p>$$A_{V}=-g_m1(r_{O1}//R_{O2})\approx-g_mr_{O1}=-\sqrt{2\mu_nC_{OX}I_D(\frac{W}{L})}\frac{1}{\lambda_1I_D}$$</p><p>输出摆幅</p><p>$$V_{in}-V_{tn}\leq V_{out} \leq V_b+|V_{tp}|$$</p><hr><h3 id="2-仿真验证"><a href="#2-仿真验证" class="headerlink" title="2. 仿真验证"></a>2. 仿真验证</h3><hr><p>绘制原理图并填加电源，如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs33.png" alt></p><p>其中NMOS的栅极为输入，输入电压设为变量vgs，PMOS是电流源，栅极电压设为vb。</p><p>设置ADE仿真环境，如下图所示，（具体设置过程见我学习笔记二 ）</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs34.png" alt></p><p>先进行直流分析找静态工作点</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs35.png" alt></p><p>放大倍数约34。静态工作电压约为915mV，输入摆幅约60mV。</p><p>依此设置<strong>vsin</strong>的各参数，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs36.png" alt></p><p>由于放大倍数较大，输入摆幅设置的小一点。</p><p>进行瞬态仿真，查看是否有失真现象</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs37.png" alt></p><p>电路正常放大，无失真</p><p>进行交流小信号分析，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs38.png" alt></p><p>增益约为40dB。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> ADE仿真 </tag>
            
            <tag> 共源极放大器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路设计学习笔记（五）基于IC617的以二极管连接的mos作负载的共源极放大器</title>
      <link href="/ICnotes51/"/>
      <url>/ICnotes51/</url>
      
        <content type="html"><![CDATA[<p>本文记录以二极管连接的MOS作为负载的共源极放大器。</p><hr><h3 id="1-原理分析"><a href="#1-原理分析" class="headerlink" title="1. 原理分析"></a>1. 原理分析</h3><hr><p>二极管连接的MOS管如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs1.png" alt></p><p>无论PMOS还是NMOS，当导通时，均工作在饱和区。</p><p>等效电阻为</p><p>$$R_x=\frac{V_x}{I_x}=\frac{1}{g_m}//R_o\approx\frac{1}{g_m}$$</p><p>以二极管连接的mos作负载的共源极放大器电路连接如下图所示</p><a id="more"></a><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs2.png" alt></p><p>以二极管连接的MOS管作负载时，交流小信号等效电路与以电阻为负载的共源极放大器相似，只是将$R_D$换为$\frac{1}{g_m}$</p><p>所以，$$V_{out}=-g_{m1}V_{1}\frac{1}{g_{m2}}$$</p><p>$$A_V=\frac{V_{out}}{V_{IN}}=-\frac{g_{m1}}{g_{m2}}=-\frac{\sqrt{\mu_p(W/L)}_1}{\sqrt{\mu_n(W/L)}_2}$$</p><p>$$R_i=\infty$$</p><p>$$R_o=\frac{1}{g_{m2}}$$</p><p>当考虑体效应时，</p><p>$$A_V=-\frac{\sqrt{\mu_p(W/L)}_1}{\sqrt{\mu_n(W/L)}_2}\frac{1}{1+\eta}$$</p><p>$$\eta=\frac{1}{g_{mb2}}$$</p><p>当不考虑体效应时，增益为两个MOS的宽长比。</p><hr><h3 id="2-仿真验证"><a href="#2-仿真验证" class="headerlink" title="2.仿真验证"></a>2.仿真验证</h3><hr><p>画电路图，填加电源，信号源，并正确设置MOS的宽长比，如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs3.png" alt></p><p>打开ADE，设置仿真变量，仿真类型，和输出信号。</p><p>先DC仿真，找电路的静态工作点。</p><p>ADE设置如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs4.png" alt></p><p>开始仿真，得到如下结果。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs5.png" alt></p><p>放大位数10左右，输入范围大区120mV,输出范围大约1.25V。可设置AC的静态工作点。</p><p>进行瞬态仿真，查看波形是否正常放大。</p><p>将<strong>vdc</strong>修改为<strong>vsin</strong>，参数设置如下图。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs6.png" alt></p><p>保存电路，ADE填加瞬态仿真类型。如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs7.png" alt></p><p>并观察输入与输出信号的波形。如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs8.png" alt></p><p>点击上方红框中的按钮可将两曲线分离，由图可知电路正常放大信号，且无失真。</p><p>最后进行交流小信号分析。设置AC仿真如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs9.png" alt></p><p>开始仿真，完成后选择<strong>AC Gain &amp; Phase</strong>，并依次选择输出信号与输入信号 。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs10.png" alt></p><p>幅频与相频特性如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/cs11.png" alt></p><p>大概记录了一下以二极管连接的MOS作负载的共源极放大器原理与验证过程。</p><p>如有不对之处，大家多多指正。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> ADE仿真 </tag>
            
            <tag> 共源极放大器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路设计学习笔记（四）基于IC617的交流小信号分析</title>
      <link href="/ICnotes4/"/>
      <url>/ICnotes4/</url>
      
        <content type="html"><![CDATA[<p>以电阻负载的共源极放大器为例，记录交流小信号分析的方法与过程。</p><hr><h3 id="1-电阻负载的共源极放大器"><a href="#1-电阻负载的共源极放大器" class="headerlink" title="1. 电阻负载的共源极放大器"></a>1. 电阻负载的共源极放大器</h3><hr><p>电路基本结构如下图所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac1.png" alt></p><p>MOS管处于截止区时，$V_{gs}&lt;V_{TH}$</p><p>处于饱和区时，$V_{gs}&gt;V_{TH}$且$V_{DS}&gt;V_{gs}-V_{TH}$ </p><p>处于线性区时，$V_{gs}&gt;V_{TH}$ 且 $V_{DS}&lt;V_{gs}-V_{TH}$</p><a id="more"></a><p>输出电压，$Vout=-gmV_1(r_0//R_D)$ </p><p>电压增益，$A_V=\frac{V_{out}}{V_{in}}=-g_m(r_0//R_D)$ </p><p>输入电阻，$R_i=\infty$</p><p>输出电阻，$R_o=r_o//R_D$ </p><p>由于$r_o&gt;&gt;R_D$ 所以$A_v=-g_mR_D=-\sqrt{2\mu_nC_{ox}\frac{W}{L}I_DR_D}=-\sqrt{2\mu_nC_{ox\frac{W}{L}}}\frac{V_{RD}}{\sqrt{I_D}}$</p><hr><h3 id="2-交流小信号分析"><a href="#2-交流小信号分析" class="headerlink" title="2. 交流小信号分析"></a>2. 交流小信号分析</h3><hr><p><strong>幅频特性</strong></p><p>​       幅频特性是指在电子技术实践中所遇到的信号往往不是单一频率的， 而是在某一段频率范围内，在放大电路、滤波电路及谐振电路等几乎所有的电子电路和设备中都含有电抗性元件， 由于它们在各种频率下的电抗值是不相同的，因而电信号在通过这些电子电路和设备的过程中，其幅度和相位发生了变化，亦即是使电信号在传输过程中发生了失真。电信号传输前后输入信号与输出信号的幅度之比称为幅频特性</p><p>​       频率响应是控制系统对正弦输入信号的稳态正弦响应。即一个稳定的线性定常系统，在正弦信号的作用下，稳态时输出仍是一个与输入同频率的正弦信号，且稳态输出的幅值与相位是输入正弦信号频率的函数。幅频特性，它等于频率响应输出幅值与输入信号幅值之比。</p><p>​       幅频特性就是指系统频率响应的幅度随频率变化的曲线,幅度大的地方对应通带,也就是对应频率成分通过系统有较小衰减,幅度小的地方对应阻带,也就是对应频率成分通过系统有较大衰减，根据这个特性，可以用来观测比较滤波器的情况，观察其是否符合要求也就是作为滤波器的技术指标。</p><p>　　理想滤波器是分段常数型的,对应的脉冲响应是无限长的sinc函数,实际系统不可能实现,因此要对脉冲响应进行截断处理,这就在频域产生吉布斯效应,也就是在通带和阻带内形成波动,并且不再尖锐截止,产生过度带。同时可以画幅频特性曲线，这样可以主要检查设计的滤波器是否满足要求,主要指标有:通带截止频率,阻带截止频率,通带波纹和阻带衰减是否达到要求。</p><p> <strong>相频特性</strong></p><p>​       输入信号与输出信号的相角差称为相频特性，相角差与频率的关系曲线称为相频特性曲线</p><p>正弦输入信号的响应也是正弦信号，频率与输入信号相同。不同的是相位与幅值。</p><p>​       在电子技术实践中所遇到的信号往往不是单一频率的, 而是在某一段频率范围内, 在放大电路、滤波电路及谐振电路等几乎所有的电子电路和设备中都含有电抗性元件, 由于它们在各种频率下的电抗值是不相同的, 因而电信号在通过这些电子电路和设备的过程中, 其幅度和相位发生了变化, 亦即是使电信号在传输过程中发生了失真.这种失真有时候是我们需要的, 而有时候是不需要的, 而且必须加以克服。</p><p>​       相位的测量, 通常是指两个或几个同频中的简谐信号之间的相位差的测量.它广泛应用于测量多相系统中或彩色电视系统中几个信号电压之间的相位关系;任意二端阻抗中的电压和电流之间的相位差;滤波器、移相器和放大器等网络的相位移及相位频率特性等</p><hr><h3 id="3-DC仿真找静态工作点"><a href="#3-DC仿真找静态工作点" class="headerlink" title="3. DC仿真找静态工作点"></a>3. DC仿真找静态工作点</h3><hr><p>绘制原理图，如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac2.png" alt></p><p>其中电源电压为3.3V。输入信号设置为变量<strong>vgs</strong>，电阻阻值为10K左右，如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac3.png" alt></p><p>打开ADE，设置变量<strong>vgs</strong>，仿真类型<strong>dc</strong>，设置输出为<strong>out</strong>。（相关操作可参考<a href="http://ccbirds.cn/ICnotes22/">http://ccbirds.cn/ICnotes22/</a>）设置完成后如图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac4.png" alt></p><p>开始仿真，结果如下。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac5.png" alt></p><p>使用快捷键<strong>m</strong>，标记线上的点，再使用快捷键 <strong>d</strong>，再点一个线上的点，会计算出两点之间的横坐标差与纵坐标差和斜率。（使用快捷键<strong>d</strong>时，要保持<strong>m</strong>点处于选中状态）。</p><p>由上图可知 ，交流输入范围大约<em>790mV</em>，交流输出范围大约<em>1.4V</em>。输入电压的中点约<em>1.7V</em>左右。也就是静态工作点。</p><hr><h3 id="4-tran仿真"><a href="#4-tran仿真" class="headerlink" title="4. tran仿真"></a>4. tran仿真</h3><hr><p>输入信号设置为正弦，查看输出是否正常，有无畸变。</p><p>将原理图中的输入信号改为正弦波输入，选用器件<strong>vsin</strong>，如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac6.png" alt></p><p><strong>DC voltage</strong>为静态工工作点的值，<strong>Amplitude</strong>为输入范围的一半。<strong>frequency</strong>为频率设定，根据自己情况设置。</p><p>电路如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac7.png" alt></p><p>设置ADE仿真环境，仿真类型为<strong>tran</strong>，输出加上一个输入信号 <strong>vin</strong>，输入与输出 对比，查看波形是否正常。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac8.png" alt></p><p>可以设置 多个仿真类型，使用哪个在哪个使能框中打勾即可。</p><p>结果如下图。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac9.png" alt></p><p>基本无失真，说明静态工作点设置合适。</p><hr><h3 id="5-AC仿真"><a href="#5-AC仿真" class="headerlink" title="5. AC仿真"></a>5. AC仿真</h3><hr><p>使用AC仿真，查看电路的幅频特性与相频特性。</p><p>修改电路中<strong>vsin</strong>的参数 。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac10.png" alt></p><p><strong>AC  magnitude</strong>，设置为<em>350mV</em>。<strong>AC  magnitude</strong>用于AC仿真，<strong>Amplitude</strong>用于瞬态仿真。</p><p>设置仿真类型为ac，并设置开始与结束频率。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac11.png" alt></p><p>开始仿真！，此时得到的结果不是幅频与相频，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac12.png" alt></p><p>选择红框中的<strong>AC Gain&amp;Phase</strong>。并依次选择原理图中的<strong>out</strong>与<strong>vin</strong></p><p>结果如图所示，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/ac13.png" alt></p><p>此次没有优化放大器参数，电路特性不好。</p><p>交流小信号分析就完事啦。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> ADE仿真 </tag>
            
            <tag> 交流小信号分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路学习笔记（三）基于IC617的直流分析</title>
      <link href="/ICnotes3/"/>
      <url>/ICnotes3/</url>
      
        <content type="html"><![CDATA[<p>本文主要介绍使用ADE进行直流仿真与分析。</p><hr><h3 id="1-原理介绍"><a href="#1-原理介绍" class="headerlink" title="1. 原理介绍"></a>1. 原理介绍</h3><hr><h4 id="Id电流"><a href="#Id电流" class="headerlink" title="Id电流"></a>Id电流</h4><p>载有电流I半导体棒，如果沿电流方向的电荷密度是Qd,电荷移动速度是v，那么$I=Q_d*V$，Qd可以表示为$Q_d=WC_{Ox}(V_{GS}-V_X-V_{th})$ 则电流可给出 $I_D=WC_{OX}[V_{GS}-V_{(X)}-V_{TH}]$ 。负号是因为载流子电荷为负引入的，v表示沟道电子的漂移速度。电子迁移率用  ，可得到如下结论。</p><p>截止区     $I_D\approx0$                             </p><p>线性区    $I_D=\frac{u_nC_{OX}W}{2L}[2(V_{GS}-T_(TH))V_{DS}-V_{DS}^2]$</p><p>饱和区    $I_D=\frac{U_NC_{OX}W}{2L}(V_{GS}-V_{TH})^2$</p><a id="more"></a><h4 id="跨导gm"><a href="#跨导gm" class="headerlink" title="跨导gm"></a>跨导gm</h4><p>由于MOSFET工作在饱和区时，其电流受栅源电压过驱动电压控制，所以我们可以定义一个性能系数来表示电压转换关系的能力，更准确地说，由于在处理信号的过程中，我们要考虑电压和电流的变化，因此我们把这个性能系数定义为漏电流的变化量除以栅源电压的变化量。我们称之为“跨导”，并用$g_m $来表示，其数值为</p><p>$$g_m=\frac{dI_D}{dV_{GS}}|V_{DS},const$$</p><p>$$g_m=\mu_nC_{OX}\frac{W}{L}(V_{GS}-V(th))$$</p><h4 id="阈值电压vth"><a href="#阈值电压vth" class="headerlink" title="阈值电压vth"></a>阈值电压vth</h4><p>随着VG的增加，耗尽层宽度和氧化物与硅界面处的电势也增加。从某种意义上讲,这样的结构类似两个电容的串联:栅氧化层电容和耗尽区电容。当界面电势达到足够高时,电子便从源流向界面并最终流到漏端。这时，源和漏之间的栅氧下就形成了载流子”沟道”,同时晶体管“导通”。我们也称之为界面“反型”。形成沟道所对应的VG称为“阈值电压”,VTH。如果VG进一步升高,则耗尽区的电荷保持相对恒定,而沟道电荷密度继续增加,导致源漏电流增加。</p><p>$$V_{th}=\phi MS+2\phi F+\frac{Q_{DEP}}{C_{OX}}$$</p><hr><h3 id="2-画原理图"><a href="#2-画原理图" class="headerlink" title="2. 画原理图"></a>2. 画原理图</h3><hr><p>打开virtuos,本文只是研究分析方法，使用简单的电路结构，一个NMOS加一个一个电阻。电路 图如下所示</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc1.png" alt></p><p>电源电压3.3V，电阻阻值任意。其中mos栅极电源，设置为变量，如下图</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc2.png" alt></p><hr><h3 id="3-漏极电流随栅极电压的变化"><a href="#3-漏极电流随栅极电压的变化" class="headerlink" title="3.漏极电流随栅极电压的变化"></a>3.漏极电流随栅极电压的变化</h3><hr><p>打开ADE，首先我们需要设置变量。<strong>Variables</strong>选择<strong>Edit</strong>.</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc3.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc4.png" alt></p><p>在<strong>name</strong>中填入变量名<strong>vgs</strong>，在<strong>value</strong>中填入默认值<strong>0</strong>，当对其他变量仿真时，这个变量的大小为默认值</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc5.png" alt></p><p>不可以在这里双击修改。</p><p>设置DC仿真，点下右边红框内的按钮。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc6.png" alt></p><p>依次设置红框中的内容，仿真类型为<strong>dc</strong>，并保存DC工作点，开始与结束电压范围<strong>0-3.3V</strong>。最后选择变量，点<strong>select Design Variable</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc7.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc8.png" alt></p><p>选择刚才设置的变量<strong>vgs</strong>，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc9.png" alt></p><p>选择输出，选择NMOS的漏极，为漏电流<strong>Id</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc10.png" alt></p><p>最后，ADE配置界面如图所示，点右边绿色按钮，开始仿真</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc11.png" alt></p><p>结果如下 。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc12.png" alt></p><p>将鼠标放在线上的一点，使用快捷键<strong>m</strong>，可快速标记线上的一点，并显示坐标点信息。如上图绿框所示。可知，此MOS的阈值电压约为0.8V。</p><hr><h3 id="4-gm随vgs的变化"><a href="#4-gm随vgs的变化" class="headerlink" title="4. gm随vgs的变化"></a>4. gm随vgs的变化</h3><hr><p>查看gm，需要用到计算器，MOS管的转移曲线需要【Design variable】与【parameter analysis】共同使用。</p><p>填加gm作为输出。打开<strong>tools</strong>，选择<strong>Results Browser</strong>。（如果这里是灰色，先点绿色按钮仿真一下）</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc13.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc14.png" alt></p><p>依次选择<strong>dcOplnfo</strong>，<strong>mo</strong>，在下方搜索<strong>gm</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc15.png" alt></p><p>找到后，右键，选择计算器</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc16.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc17.png" alt></p><p>之后选择<strong>output</strong>，<strong>setup</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc18.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc19.png" alt></p><p>输入变量名<strong>gm</strong>，点<strong>Get Expression</strong>。点<strong>ok</strong>即可。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc20.png" alt></p><p>但此时还不能仿真mos的转移曲线，还需要parameter analysis一起，才可以画出转移曲线。</p><p>选择<strong>tools</strong>下的<strong>parameter analysis</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc21.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc22.png" alt></p><p>依次设置<strong>valrible</strong>，<strong>from</strong>，<strong>to</strong>，<strong>total steps</strong>。步数越多，所需时间越长。</p><p>最后点绿色的开始按钮，开始仿真。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/dc23.png" alt></p><p>基本的直流分析 ，到这里就完事了。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> ADE仿真 </tag>
            
            <tag> 直流分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路设计学习笔记（二）基于IC617反相器设计之layout</title>
      <link href="/ICnotes23/"/>
      <url>/ICnotes23/</url>
      
        <content type="html"><![CDATA[<p>本文主要记录反相器版图的绘制以及layout的常用操作。</p><h3 id="打开Layout-XL"><a href="#打开Layout-XL" class="headerlink" title="打开Layout XL"></a>打开Layout XL</h3><hr><p>打开已经画好的反相器原理图，打开菜单<strong>Launch</strong>选择<strong>layout XL</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout1.png" alt></p><a id="more"></a><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout2.png" alt></p><p>点<strong>ok</strong>即可</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout3.png" alt></p><p><strong>cell</strong>名要和原理图的名字一致，<strong>Type</strong>这里选择<strong>layout</strong>，点<strong>ok</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout4.png" alt></p><p>成功进入layout界面</p><hr><h3 id="绘制版图"><a href="#绘制版图" class="headerlink" title="绘制版图"></a>绘制版图</h3><hr><p><strong>常用快捷键</strong></p><table><thead><tr><th align="center">快捷键</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">p</td><td align="center">画线</td></tr><tr><td align="center">o</td><td align="center">过孔</td></tr><tr><td align="center">shift+f</td><td align="center">显示所有层</td></tr><tr><td align="center">ctrl+f</td><td align="center">隐藏层</td></tr><tr><td align="center">l</td><td align="center">放label</td></tr><tr><td align="center">m</td><td align="center">移动</td></tr><tr><td align="center">c</td><td align="center">复制</td></tr><tr><td align="center">f</td><td align="center">满工作区显示</td></tr><tr><td align="center">k</td><td align="center">标尺</td></tr><tr><td align="center">r</td><td align="center">画矩形</td></tr><tr><td align="center">s</td><td align="center">拉伸</td></tr><tr><td align="center">a</td><td align="center">对齐</td></tr><tr><td align="center">backspace</td><td align="center">撤销上一个点</td></tr></tbody></table><p>导入器件，打开<strong>菜单connectivity</strong>选择<strong>Generate</strong>点<strong>All from source</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout5.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout6.png" alt></p><p>在<strong>generate</strong>中，只需要勾选<strong>Instances</strong>。其余两个不需要勾选。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout7.png" alt></p><p>会出现两个红框，这时器件已经导入进来了，只是没有显示层，使用快捷键<strong>shift+f</strong>。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout8.png" alt></p><p>这时就看到了器件的版图。并在各极上显示有网络标号。使用快捷键<strong>a</strong>将两个器件栅极对齐，使用<strong>p</strong>将两个栅极连接，使用<strong>p</strong>时，软件会自动识别线层和线宽，连接完成时按 <strong>enter</strong>，（这是IC617的功能）。操作处下图。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout9.gif" alt></p><p>将栅极连好后，同样使用<strong>p</strong>连接其他极，连接网络标号相同的极。</p><p>如果，在原理图选中器件后，版图中也会同时标记出来，在原理图中，选中连接线后，在版图中会高亮显示，相应器件。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/laout10.png" alt></p><p>这里仅仅是演示，没有注意版图的紧凑和其他要求。</p><p>画好后，需要填加字符，与原理 图中的pin对应。使用快捷键<strong>l</strong>。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout11.png" alt="![](https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/集成电路学习笔记（二）/layout12.png)"></p><p>在这里，需要设置两个，一个是<strong>label</strong>的名字，（与原理图中pin名一致），<strong>select layer</strong>，这里一定要选择<strong>M1 TXT</strong>层。之后将字符放在M1金属上。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout16.png" alt></p><p>但，<strong>in</strong>不能直接放，字符只能放到金属层，我们需要在栅极这里放个过孔，使用快捷键<strong>o</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout12.png" alt></p><p>我们选择<strong>M1_GT</strong>，是M1到GT的过孔。其他参数不需要修改。放置完成如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout14.png" alt></p><p>之后分别放置<em>vcc<em>，</em>gnd<em>，</em>in</em> 。一定要放置到M1金属层上。完成后如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout15.png" alt></p><p>点保存，并且要有随时保存的习惯。不然可能出现一天的努力都随着软件的崩溃而消失。</p><hr><h3 id="DRC"><a href="#DRC" class="headerlink" title="DRC"></a>DRC</h3><hr><p>DRC检查为检查版图中器件的放置是否满足工艺要求，如果器件太近，在制作时无法实现。</p><p>打开菜单<strong>calibre</strong>，选择<strong>Run nmDRC</strong>。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout17.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout18.png" alt></p><p>将<strong>Load Runset File</strong>窗口叉掉，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout19.png" alt></p><p>注意红框框住的位置。</p><p>点上方红色字体的<strong>Rules</strong>，我们来填加规则文件。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout20.png" alt></p><p>点<strong>…</strong>来找规则文件。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout22.png" alt></p><p>规则文件所在目录，一般与图中路径相同。选择<strong>…p2mt6</strong>，点<strong>ok</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout23.png" alt></p><p>点<strong>Run DRC</strong>开始DRC检查。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout24.png" alt></p><p>在错误，GT层必须在ONO中，所以我们在两栅极这间，用<strong>ONO</strong>材料画一个矩形。<strong>ono</strong>在左侧选择，之后用快捷键<strong>r</strong>画一个矩形。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout25.png" alt></p><p>还有错误，在过孔中，M1金属的区域太小，我们选中过孔，使用快捷键<strong>q</strong>，查看其属性。并修改。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout26.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout27.png" alt></p><p>修改完成后点<strong>ok</strong>。再检查一下DRC，刚才的错误没有了，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout28.png" alt></p><p>剩下的是密度问题，因为我们的器件太少了。暂时不用理会。</p><hr><h3 id="LVS检查"><a href="#LVS检查" class="headerlink" title="LVS检查"></a>LVS检查</h3><hr><p>LCS检查为检查电气连接，是否存在电气连接错误。</p><p>打开菜单<strong>calibre</strong>，选择<strong>Run nmLVS</strong>。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout29.png" alt></p><p>叉掉<strong>load runset file</strong>。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout30.png" alt></p><p>LVS是将原理 图网络与layout网络对比，选择完layout输入后，还要选择<strong>nerlist</strong>输入。</p><p>点<strong>netliast</strong>按钮，选中右边红框中的方框。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout31.png" alt></p><p>再选择<strong>LVS</strong>规则文件，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout32.png" alt></p><p>之后，点<strong>Run LVS</strong>。开始LVS检查。</p><p>如果没有电气连接错误，会出现笑脸，如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/layout33.png" alt></p><p>到这里版图绘制就完事了。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> 原理图 </tag>
            
            <tag> schmetic </tag>
            
            <tag> layout </tag>
            
            <tag> DRC </tag>
            
            <tag> LVS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路学习笔记（二）基于IC617反相器设计之ADE仿真</title>
      <link href="/ICnotes22/"/>
      <url>/ICnotes22/</url>
      
        <content type="html"><![CDATA[<p>本文主要记录使用ADE进行仿真的过程。</p><hr><h3 id="搭建仿真测试电路"><a href="#搭建仿真测试电路" class="headerlink" title="搭建仿真测试电路"></a>搭建仿真测试电路</h3><hr><p>新建一个Cell，填加画好的反相器symbol，如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade1.png" alt></p><p>仿真，需要填加电源和信号源，（也可以不加电源和信号源，方法在后面会介绍）。电源和信号源，在analoglib库中，这里面的器都 是理想器件，是不能layout的。电源的cell名为-<strong>vdc</strong>，电源的电源在下面的<strong>DC voltage</strong>修改，在这里设置为3.3V，大家根据自己情况设置。加完电源后，需要要加一个<strong>gnd</strong>，gnd没有参数。</p><a id="more"></a><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ADE2.png" alt></p><p>加完电源，加信号源。<strong>vpulse</strong>，这是一个脉冲信号，额<strong>voltage1</strong>和<strong>voltage2</strong>两电压，代表脉冲高低电平的电压，<strong>period</strong>是周期，不是频率！！！<strong>Pulse width</strong>是脉冲宽度。大家根据自己情况设置。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade3.png" alt></p><p>填加完电源和信号源，连线，如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade4.png" alt></p><p>可以给线填加一个label。使用快捷键<strong>l</strong>，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade5.png" alt></p><p>在<strong>names</strong>里写入线的名字。之后鼠标放到原理图上，选择需要标记的线，点一下。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade6.png" alt></p><p>到这里，仿真测试环境搭建完成。</p><hr><h3 id="开始仿真"><a href="#开始仿真" class="headerlink" title="开始仿真"></a>开始仿真</h3><hr><p>打开ADE仿真环境。<strong>launch</strong>-&gt;<strong>ADE L</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade7.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade8.png" alt></p><p>打开ADE后，选择<strong>setup</strong>下<strong>model libraries</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade9.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade10.png" alt></p><p>在这里，已经自动填加好了，如果没有，需要自己手动填加，<strong>tt</strong>是普通模式。仿真库一般在./model/spectre下。设置完点<strong>ok</strong>即可。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade11.png" alt></p><p>设置仿真类型，选择<strong>analyses</strong>下的<strong>choose</strong>，这次以瞬态仿真，记录ADE的使用，其他的仿真类型，以后分加别介绍。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade12.png" alt></p><p><strong>stop time</strong>填<strong>5u</strong>，咱们设置的信号源周期是<strong>1u</strong>，咱们观察5 个周期。<strong>Enable</strong>后面的框打勾。点<strong>ok</strong>。</p><p><strong>ouput</strong>下的<strong>to be plotted</strong>下的<strong>select on design</strong>。在原理图中选择看的电压和电流。看电压，选择线，看电流选择器件端子。我们看下输入和输出波形。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade13.png" alt></p><p>选择后线会变色，器件端子会自动画个圈。全部选择完后，按下<strong>ESC</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade14.png" alt></p><p>点右侧的绿色的开始按钮，开始仿真。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade15.png" alt></p><p>会弹出一人框，显示仿真信息，如果有错误，也会在这里显示 。仿真结果如下图。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade16.png" alt></p><p>点左侧的<strong>vis</strong>列的小眼睛可以隐藏或显示相应的波形。</p><p>可以看到out是in的反相。则反相器设计成功。</p><p>到这，仿真就完成了，但每次打开都要设置这么多吗？我们可以把仿真设置保存下来。选择<strong>session</strong>-&gt;<strong>save state</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade17.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/ade18.png" alt></p><p>在<strong>save as</strong>这里，可以自己定义名字。之后 点<strong>ok</strong>就可以保存了，下次打开ADE，选择<strong>load state</strong>就可以加载 这次保存的设置。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> 原理图 </tag>
            
            <tag> schmetic </tag>
            
            <tag> ADE仿真 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路学习笔记（二）基于IC617反相器设计之原理图绘制</title>
      <link href="/ICnotes21/"/>
      <url>/ICnotes21/</url>
      
        <content type="html"><![CDATA[<hr><p>本文主要记录在IC617中原理图的绘制和schematic的使用方法。</p><hr><h3 id="新建library"><a href="#新建library" class="headerlink" title="新建library"></a>新建library</h3><hr><p>要画设计自己的集成电路，需要建一个自己的库，方便对自己设计文件的管理。</p><p>打开<em>library manager<em>，</em>file</em> 下<em>NEW<em>下</em>Library</em></p><a id="more"></a><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a1.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a2.png" alt></p><p>选择库的保存路径，一般默认即可，并在<em>name<em>中填入自己库的名字。点</em>ok</em></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a3.png" alt></p><p>弹出<em>Technology File for New Library</em> 窗口，选择第三个<em>Attach to an existing technology library</em> ，点<em>ok</em></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a4.png" alt></p><p>选择<em>smic18ee</em>工艺库，点<em>ok</em>。在<em>library manager</em>中就可以看见自己的库了。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a6.png" alt></p><p>现在自己的库是空的，需要自己新建<em>cell</em>。</p><hr><h3 id="新建cell"><a href="#新建cell" class="headerlink" title="新建cell"></a>新建cell</h3><hr><p>在<em>library manager</em>中<em>file</em>菜单<em>NEW</em>选择<em>cell View</em>。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a7.png" alt></p><p>在<em>Cell<em>里填入自己cell的名字,在</em>Type<em>里选择</em>schematic</em>.点<em>ok</em>，弹出原理图绘制窗口。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a8.png" alt></p><hr><h3 id="反相器原理图绘制"><a href="#反相器原理图绘制" class="headerlink" title="反相器原理图绘制"></a>反相器原理图绘制</h3><hr><p>说一下常用快捷键</p><table><thead><tr><th align="center">快捷键</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">i</td><td align="center">放置器件</td></tr><tr><td align="center">p</td><td align="center">放置Pin</td></tr><tr><td align="center">l</td><td align="center">加标签</td></tr><tr><td align="center">c</td><td align="center">复制</td></tr><tr><td align="center">m</td><td align="center">移动</td></tr><tr><td align="center">w</td><td align="center">画电气线</td></tr><tr><td align="center">shift+x</td><td align="center">save&amp;check</td></tr><tr><td align="center">q</td><td align="center">查看与修改器件属性</td></tr></tbody></table><p>点原理图空白处，按快捷键<em>i</em></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a9.png" alt></p><p>弹出<em>Add Instance</em> 窗口，点<em>Browes</em></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a10.png" alt></p><p>会弹出<em>library manager</em>窗口，选择smic18ee的库并选择mosfets类，如果没有<em>Category</em>这一栏，在左上角<em>Show Categories</em>前面的方框里打勾。</p><p>选择<em>p33e2r<em>，其中</em>p<em>代表PMOS，</em>33<em>代表3.3V电压，</em>18<em>代表1.8电压 ，</em>50</em> 代表5V电压，<em>155</em>代表15V电压 。NMOS的<em>nz</em>代表低阈值电压。我习惯用3.3V。大家可根据自己情况选择MOS。</p><p>选中后，双击<em>View<em>栏的</em>symbol</em></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_A11.png" alt></p><p>器件参数设置，在这里，我们需要修改<em>Length</em>和<em>Total Width</em>，宽长可根据自己需要修改，也可不修改。我常设置<em>Length</em>为1u，可减小沟道长度调制效应，PMOS的宽长比是NMOS的2.5倍左右，因为PMOS是空穴导电，NMOS是电子导电。其他参数，会在后面需要的时候介绍。</p><p>修改完成后，把鼠标放到原理图窗口，会有一个随鼠标动的MOS，选择一个位置，点一下，就可以放置了。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a12.png" alt></p><p>随后放置Nmos，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a13.png" alt></p><p>可以直接在<em>Cell</em>里，把<em>p</em>改成<em>n</em>就行。也可以按<em>PMOS</em>的选择方式，选择。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a14.png" alt></p><p>根据自己需要修改宽长比。找位置放置，放置完成后按<em>esc</em></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a15.png" alt></p><p>下面放置PIN，按快捷键<em>p</em>，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a16.png" alt></p><p>弹出<em>create Pin<em>窗口，</em>Names<em>填入Pin的名字，</em>Direction<em>填入数据方向，</em>Signal Type<em>填入pin类型，这里一般不需要管，它会自己设置好的。放置四个pin。放置完成后，按</em>ESC</em></p><table><thead><tr><th align="center">name</th><th align="center">direction</th></tr></thead><tbody><tr><td align="center">out</td><td align="center">output</td></tr><tr><td align="center">in</td><td align="center">input</td></tr><tr><td align="center">vcc</td><td align="center">inputoutput</td></tr><tr><td align="center">gnd</td><td align="center">inputoutput</td></tr></tbody></table><p>放置完成如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a17.png" alt></p><p>下面开始连线，按快捷键<em>w</em>，开始连线。要注意MOS衬底的连接。连接完成如下图所示。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a18.png" alt></p><p>按快捷键<em>shift + x</em>检查和保存。无错误，会在<em>CIW</em>中提示，保存完成。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a19.png" alt></p><p>下面我们来生成symbol，方便以后在其他设计中调取使用。选择<strong>create</strong>菜单，之后 依次选择<strong>cellview</strong>，<strong>from cellview</strong></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a20.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a21.png" alt></p><p>不需要修改，点<strong>ok</strong>即可，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a22.png" alt></p><p>在上下左右放置pin，可根据自己需要修改放置位置，其他参数不需要修改。点<em>ok</em>。可得到下图的symbol，在<em>library manager</em>中也可看到。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a23.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/inv_a24.png" alt></p><p>到这里，反相器的原理图绘制完成了。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
            <tag> 原理图 </tag>
            
            <tag> schmetic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成电路学习笔记（一）IC617工艺库安装</title>
      <link href="/ICnotes1/"/>
      <url>/ICnotes1/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><hr><p>集成电路设计使用cadence virtuoso 作为开发环境。virtuoso的安装十分复杂，在此不对开发环境的安装过多阐述，大家可自行咸鱼或淘宝。本人使用IC617进行学习。</p><hr><h3 id="工艺库"><a href="#工艺库" class="headerlink" title="工艺库"></a>工艺库</h3><hr><p>工艺库是各工艺厂商为设计人员提供的，不同厂商的工艺库是不同，设计集成电路必须使用工艺库。工艺库的安装也比较简单，但工艺库 两种，CDB，和IOA。CDB是为IC5xx提供，OA是为IC6XX提供。咱们是IC617安装CDB的库稍稍麻烦一点，下面将分别介绍安装方法。</p><hr><h3 id="CDB库安装"><a href="#CDB库安装" class="headerlink" title="CDB库安装"></a>CDB库安装</h3><hr><a id="more"></a><p>下载smic18ee的库。<a href="https://lanzous.com/b0evko4gf" target="_blank" rel="noopener">https://lanzous.com/b0evko4gf</a></p><p>进入库所在目录，解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ tar -zxvf smic18ee_2P6M_20100810.tar.gz<br></code></pre></td></tr></table></figure><p>并将解压后的目录复制到设计目录，我是在用户home目录下，新建一个virtuoso目录，以后在这个目录进行设计 。将解压后的目录复制到~/virtuoso。启动IC617。使用命令icfb或者virtuoso。点<em>tools</em>，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC6171.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC6172.png" alt></p><p>选择倒数第二个，<em>conversion toolbox</em>.</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC6173.png" alt></p><p>选择第一个，<em>CDB to open access translator</em>.</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC6175.png" alt></p><p>点<em>Browse</em>找到复制到virtuoso下工艺库文件目录。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC6176.png" alt></p><p>点<em>ok</em></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC6177.png" alt></p><p>在右边的框里会有<em>smic18ee</em>，选中，一定要点一下，默认是不选中的。点<em>ok</em>。稍等一会。CIW这里会提示完成。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC6178.png" alt></p><p>在virtuos目录下会多一个smic18ee的目录。打开<em>library  manager</em>会出现smic18ee的库。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC6179.png" alt></p><p>到这里smic18ee的库安装成功了。</p><hr><h3 id="OA库安装"><a href="#OA库安装" class="headerlink" title="OA库安装"></a>OA库安装</h3><hr><p>将需要安装的库解压并移动到virtuoso下。下载地址。<a href="https://lanzous.com/ic5p21a" target="_blank" rel="noopener">https://lanzous.com/ic5p21a</a></p><p>OA库的安装，比较简单。打开virtuoso，打开<em>tools<em>下的</em>library path Editor</em></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC61710.png" alt></p><p>选中最下方的空白格。点<em>Edit</em> 。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC61711.png" alt></p><p>选择<em>Add Library</em> </p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC61712.png" alt></p><p>选择smic65这个文件夹，点进去。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC61713.png" alt></p><p>选择右边框里的<em>smic65_OA<em>，点</em>ok</em></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC61714.png" alt></p><p>保存一下。打开<em>library  manager</em>就可以看到库了。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/IC61715.png" alt></p><p>到这里OA库也安装完了。</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p><p>也可电邮我</p><p><a href="mailto:ccbirds@gmail.com">ccbirds@gmail.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 集成电路设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cadence </tag>
            
            <tag> virtuoso </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速重装win10系统</title>
      <link href="/quickly-reinstall-win10-system/"/>
      <url>/quickly-reinstall-win10-system/</url>
      
        <content type="html"><![CDATA[<p>怎么快速的给自己的电脑重装一个系统？</p><hr><h3 id="1、下载win镜像"><a href="#1、下载win镜像" class="headerlink" title="1、下载win镜像"></a>1、下载win镜像</h3><hr><p>可以在I Tell You 上下载纯净版win10镜像，<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">https://msdn.itellyou.cn/</a> </p><p>X64为64位的，X86为32位的，正常个人使电脑选择consumer editions。下面为迅雷的链接，打开迅雷就可以下载了。大家根据自己电脑情况下载相应版本。不要把镜像下载到一会要装系统的分区（桌面也是在C盘哦）！</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win%E9%95%9C%E5%83%8F.png" alt></p><a id="more"></a><hr><h3 id="2、制作优盘启动工具"><a href="#2、制作优盘启动工具" class="headerlink" title="2、制作优盘启动工具"></a>2、制作优盘启动工具</h3><hr><p>下载大白菜优盘启动盘制作工具,下载地址：<a href="http://www.dabaicai.pw/" target="_blank" rel="noopener">http://www.dabaicai.pw/</a> </p><p>推荐大家下载UEFI版。下载后安装并启动大白菜，插入优盘。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai1.png" alt></p><p>设备选择自己的优盘，其他默认即可。点开始制作。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai2.png" alt></p><p>会删除优盘里面的文件，重要文件提前备份。稍等几分钟。制作完成后可以尝试模拟启动。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai3.png" alt>4</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/dabaicai4.png" alt></p><p>优盘启动盘制作就完成了。</p><hr><h3 id="3、进入bios"><a href="#3、进入bios" class="headerlink" title="3、进入bios"></a>3、进入bios</h3><hr><p>重启电脑进行电脑bios。各品牌电脑进入bios的热键不太一样，大家可以百度一下自己电脑怎么进入bios。我以联想笔记本为例。联想笔记本左边有一个小孔，用针往里按一下，会有按键按下的感觉。开机时，不按电源键，按一下这个小孔就会进入bios。</p><p>进入bios，选择BIOS setup,</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios1.jpg" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios2.jpg" alt></p><p>进入后选择Boot，修改Boot Mode为UEFI模式，之后选择Exit，选择退出并保存。</p><p>再次进入bios，选择Boot Menu，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios3.jpg" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/bios4.jpg" alt></p><p>选择从优盘启动，USB HDD。我的优盘是金士顿的。确定，大白菜优盘启动。</p><hr><h3 id="4、大白菜优盘启动"><a href="#4、大白菜优盘启动" class="headerlink" title="4、大白菜优盘启动"></a>4、大白菜优盘启动</h3><hr><p>成功进入大白菜。</p><p>如果硬盘还没有安装过系统，一定要重新分一下区，使用DIskGenius工具。选择快速分区，分区类型为GUID，一定要创建ESP和MSR分区。点确定开始建立分区 。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%88%86%E5%8C%BA1.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C1.png" alt></p><p>点浏览，选择刚才下载的win10镜像。可以选择win10的不同版本，至于各版本有什么不同，在此不多赘述，大家可以自己搜索一下。正常家用看电影办公选择家庭的就可以。如果个人有些开发的需要，选择专业的就可以。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C2.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C3.png" alt></p><p>选择系统将要安装的位置，不要选错了！</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C4.png" alt></p><p>选择全自动安装，其他默认即可。等待一会。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%A4%A7%E7%99%BD%E8%8F%9C5.png" alt></p><p>制作完成会提示你重启电脑，重启电脑，此时拔掉优盘。</p><hr><h3 id="5、win10安装设置"><a href="#5、win10安装设置" class="headerlink" title="5、win10安装设置"></a>5、win10安装设置</h3><hr><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%851.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%852.png" alt></p><p>win10开始系统准备，等一会，可能需要一段时间。会重启几次。之后依次根据提示设置。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%853.png" alt></p><p>![](<a href="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装" target="_blank" rel="noopener">https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10安装</a> 4.png)</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%856.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%857.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%858.png" alt></p><p>有账户可以登录一下，没有就点左下的脱机账户。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8570.png" alt></p><p>没有账户就选择有限体验，实际上Microsoft的应用和服务咱们是不用的，有没有就无所谓了。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8510.png" alt></p><p>输入用户名。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8511.png" alt></p><p>输入登录密码。输入两次。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8512.png" alt></p><p>设置3个安全问题。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8513.png" alt></p><p>点否即可。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8514.png" alt></p><p>根据自己需要选择。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8515.png" alt></p><p>根据自己需要选择。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/win10%E5%AE%89%E8%A3%8520.png" alt></p><p>到这里，系统就装完了。</p><hr><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
            <tag> 系统重装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写论文小工具推荐</title>
      <link href="/Paper-gadget-recommendation/"/>
      <url>/Paper-gadget-recommendation/</url>
      
        <content type="html"><![CDATA[<p>在这里给大家安利几款软件，都是在写论文过程中常用的软件。</p><p>由于这些软件我都已经安装过了，所以没有给出详细的安装过程，不过均给出了相关的教程地址。</p><hr><h3 id="首先就是office和wps"><a href="#首先就是office和wps" class="headerlink" title="首先就是office和wps"></a>首先就是office和wps</h3><hr><a id="more"></a><p>这俩款软件，不需要多说，大家都在用。至于用哪个，看大家使用习惯。</p><p>wps可以从官网上下载安装包，安装. <a href="https://www.wps.cn/" target="_blank" rel="noopener">https://www.wps.cn/</a></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/wps1.png" alt></p><p>office,如果是个人使用，不用商业用途可以在微信公众号==软件安装管家==上获取最新的破解版本。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E7%AE%A1%E5%AE%B61.png" alt></p><p>点软件目录，里面有很多专业工具。里面有安装教程，我就不再说明了。</p><h4 id="仅可用于个人使用"><a href="#仅可用于个人使用" class="headerlink" title="仅可用于个人使用"></a>仅可用于个人使用</h4><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E7%AE%A1%E5%AE%B62.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/word1.png" alt></p><hr><h3 id="画框图工具"><a href="#画框图工具" class="headerlink" title="画框图工具"></a>画框图工具</h3><hr><p>要写论文过程中，框图电路图等，是论文中的必要元素，通常大家可能会使用visio画图，今天我再给大家推荐一款软件==亿图==也是一款画图软件，功能比较强大，个人感觉，亿图比较好用。</p><p>visio：同样在公众号里会有最新版本有visio。此处不再赘述。</p><p>亿图：也是一款收费软件，如果大家是个人使用，可以点击链接下载破解版<a href="https://www.lanzous.com/iaakh4b" target="_blank" rel="noopener">https://www.lanzous.com/iaakh4b</a></p><p>压缩包内有详细的安装和破解过程，另外，亿可以导出多种格式，非常方便。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E4%BA%BF%E5%9B%BE1.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E4%BA%BF%E5%9B%BE2.png" alt></p><hr><h3 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h3><hr><p>框图和电路图画好了，在数据结果部分可能需要画图表，图表可以使用excel来画，不过想让图表美观一点，可能有点费力了。最常用的是MATLAB来画图和渲染，matlab的下载和安装，同样在微信公众号软件安管家上可以找到。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/matlab1.png" alt="盗一张图"></p><hr><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><hr><p>写论文时难免会需要输入一些公式，尤其是理工科。常用的公式编辑器为mathtype。</p><p><a href="https://www.mathtype.cn/" target="_blank" rel="noopener">https://www.mathtype.cn/</a> 大家可以在官网下载安装使用</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathtype1.png" alt></p><p>再给大家安利一款公式软件，它不是用来写公式的而是用来识别公式，截图需要识别的公式，它会自己识别公式，可以转为latex语言，也可以直接放入word中。下载地址<a href="https://mathpix.com/" target="_blank" rel="noopener">https://mathpix.com/</a> 选择相应的版本下载安装即可。需要注册登录才能下载，是free的。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix1.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/mathpix2.png" alt></p><hr><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><hr><p>参考文献的引用，如果按格式一个一个输入，很慢的。给大家推荐一个网址，可以批量引用参考文献—百度学术<a href="http://xueshu.baidu.com/" target="_blank" rel="noopener">http://xueshu.baidu.com/</a> </p><p>输入参考文献名称或者关键字，点批量引用。点右下角的图标。选择引用格式一键复制即可。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF2.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF1.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF3.png" alt></p><p>这是一些常用的论文工具，如有没有提及或者表述不对之处，希望大家帮我指出来</p><hr><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 写论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nanopi性能测试unixbench</title>
      <link href="/nanopi-test/"/>
      <url>/nanopi-test/</url>
      
        <content type="html"><![CDATA[<p>入手nanopi不知道它的性能怎么样，下面我们来使用unixbench，对nanopi跑分测试一下</p><hr><p>只需要简单的三个命令就可以</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs zsh">$ wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh<br>$ chmod +x unixbench.sh<br>$ sudo ./unixbench.sh  //会自动检查依赖<br></code></pre></td></tr></table></figure><a id="more"></a><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench1.png" alt></p><p>时间有点长，稍等一会</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/unixbench2.png" alt></p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs zsh">========================================================================<br>   BYTE UNIX Benchmarks (Version 5.1.3)<br><br>   System: NanoPi-NEO2-Black: GNU/Linux<br>   OS: GNU/Linux -- 4.14.111 -- <span class="hljs-comment">#1 SMP Thu Dec 19 19:12:27 CST 2019</span><br>   Machine: aarch64 (aarch64)<br>   Language: en_US.utf8 (charmap=<span class="hljs-string">"UTF-8"</span>, collate=<span class="hljs-string">"UTF-8"</span>)<br>   10:22:26 up 18 min,  3 users,  load average: 0.68, 0.52, 0.32; runlevel 5<br><br>------------------------------------------------------------------------<br>Benchmark Run: Fri Mar 13 2020 10:22:26 - 10:50:55<br>0 CPUs <span class="hljs-keyword">in</span> system; running 1 parallel copy of tests<br><br>Dhrystone 2 using register variables        6580436.9 lps   (10.0 s, 7 samples)<br>Double-Precision Whetstone                     1155.9 MWIPS (10.0 s, 7 samples)<br>Execl Throughput                               1316.7 lps   (29.9 s, 2 samples)<br>File Copy 1024 bufsize 2000 maxblocks        145034.8 KBps  (30.0 s, 2 samples)<br>File Copy 256 bufsize 500 maxblocks           45162.1 KBps  (30.0 s, 2 samples)<br>File Copy 4096 bufsize 8000 maxblocks        351000.7 KBps  (30.0 s, 2 samples)<br>Pipe Throughput                              440132.8 lps   (10.0 s, 7 samples)<br>Pipe-based Context Switching                  66182.3 lps   (10.0 s, 7 samples)<br>Process Creation                               2560.7 lps   (30.0 s, 2 samples)<br>Shell Scripts (1 concurrent)                   1991.9 lpm   (60.0 s, 2 samples)<br>Shell Scripts (8 concurrent)                    656.1 lpm   (60.1 s, 2 samples)<br>System Call Overhead                         785715.5 lps   (10.0 s, 7 samples)<br><br>System Benchmarks Index Values               BASELINE       RESULT    INDEX<br>Dhrystone 2 using register variables         116700.0    6580436.9    563.9<br>Double-Precision Whetstone                       55.0       1155.9    210.2<br>Execl Throughput                                 43.0       1316.7    306.2<br>File Copy 1024 bufsize 2000 maxblocks          3960.0     145034.8    366.2<br>File Copy 256 bufsize 500 maxblocks            1655.0      45162.1    272.9<br>File Copy 4096 bufsize 8000 maxblocks          5800.0     351000.7    605.2<br>Pipe Throughput                               12440.0     440132.8    353.8<br>Pipe-based Context Switching                   4000.0      66182.3    165.5<br>Process Creation                                126.0       2560.7    203.2<br>Shell Scripts (1 concurrent)                     42.4       1991.9    469.8<br>Shell Scripts (8 concurrent)                      6.0        656.1   1093.5<br>System Call Overhead                          15000.0     785715.5    523.8<br>                                                                   ========<br>System Benchmarks Index Score                                         372.0<br><br><br><br>======= Script description and score comparison completed! =======<br></code></pre></td></tr></table></figure><p>这是结果，分不是很高。</p><hr><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> nanopi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nanopi </tag>
            
            <tag> unixbench </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nanopi安装oh my zsh</title>
      <link href="/nanopi-install-oh-my-zsh/"/>
      <url>/nanopi-install-oh-my-zsh/</url>
      
        <content type="html"><![CDATA[<p>nanopi是基于ubuntu16.04LTS，自带的bash终端总觉的有点不舒服，有一款终端不错还可以更换主题。oh my zsh。<a href="https://ohmyz.sh/" target="_blank" rel="noopener">https://ohmyz.sh/</a> </p><p>下面我们来反nanopi的终端美化一下。</p><hr><p>首先安装zsh，我们先看一下，我们有没有zsh。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cat /etc/shells<br>/bin/sh<br>/bin/dash<br>/bin/bash<br>/bin/rbash<br>$ <span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span>  //查看我们当前使用的shell<br>/bin/bash<br></code></pre></td></tr></table></figure><p>当前，我们是没有安装zsh的。使用的是默认的bash。</p><a id="more"></a><hr><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><hr><p>先安装zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install zsh<br>Reading package lists... Done<br>Building dependency tree <br>Reading state information... Done<br>The following packages were automatically installed and are no longer required:<br>  aspell aspell-en dictionaries-common emacsen-common libaspell15 libenca0 libfaad2 libjack-jackd2-0 libmodplug1<br>  libmpcdec6 libopus0 libopusfile0 librcc0 librcd0 libresid-builder0c2a libsidplay2v5 libsidutils0 libspeex1<br>  libtag1v5 libtag1v5-vanilla libtagc0 libtext-iconv-perl<br>Use <span class="hljs-string">'sudo apt autoremove'</span> to remove them.<br>The following additional packages will be installed:<br>  zsh-common<br>Suggested packages:<br>  zsh-doc<br>The following NEW packages will be installed:<br>  zsh zsh-common<br>0 upgraded, 2 newly installed, 0 to remove and 250 not upgraded.<br>Need to get 3,724 kB of archives.<br>After this operation, 14.0 MB of additional disk space will be used.<br>Do you want to <span class="hljs-built_in">continue</span>? [Y/n] y<br>Get:1 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh-common all 5.1.1-1ubuntu2.3 [3,182 kB]<br>Get:2 http://mirrors.ustc.edu.cn/ubuntu-ports xenial-security/main arm64 zsh arm64 5.1.1-1ubuntu2.3 [542 kB]<br>Fetched 3,724 kB <span class="hljs-keyword">in</span> 5s (648 kB/s)<br>debconf: delaying package configuration, since apt-utils is not installed<br>Selecting previously unselected package zsh-common.<br>(Reading database ... 45962 files and directories currently installed.)<br>Preparing to unpack .../zsh-common_5.1.1-1ubuntu2.3_all.deb ...<br>Unpacking zsh-common (5.1.1-1ubuntu2.3) ...<br>Selecting previously unselected package zsh.<br>Preparing to unpack .../zsh_5.1.1-1ubuntu2.3_arm64.deb ...<br>Unpacking zsh (5.1.1-1ubuntu2.3) ...<br>Setting up zsh-common (5.1.1-1ubuntu2.3) ...<br>Setting up zsh (5.1.1-1ubuntu2.3) ...<br>update-alternatives: using /bin/zsh5 to provide /bin/zsh (zsh) <span class="hljs-keyword">in</span> auto mode<br>update-alternatives: using /bin/zsh5 to provide /bin/rzsh (rzsh) <span class="hljs-keyword">in</span> auto mode<br></code></pre></td></tr></table></figure><p>查看一下有没有安装上，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cat /etc/shells<br>/bin/sh<br>/bin/dash<br>/bin/bash<br>/bin/rbash<br>/bin/zsh<br>/usr/bin/zsh   //已经有zsh了<br></code></pre></td></tr></table></figure><p>把zsh修改为默认shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ chsh -s /bin/zsh<br></code></pre></td></tr></table></figure><p>安装oh my zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sh -c <span class="hljs-string">"<span class="hljs-variable">$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)</span>"</span><br></code></pre></td></tr></table></figure><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_ohmyzsh.png" alt></p><p>这样就安装上了</p><hr><h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><hr><p>更改主题和加插件，编辑文件==~/.zshrc==</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ vim ~/.zshrc<br>ZSH_THEME=<span class="hljs-string">"ys"</span>   //更改主题，我比较喜欢ys<br>$ <span class="hljs-built_in">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/ohmyzsh1.png" alt></p><p>可以在==~/.oh-my-zsh/themes==查看都有什么主题</p><hr><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><hr><h4 id="安装autojump插件"><a href="#安装autojump插件" class="headerlink" title="安装autojump插件"></a>安装autojump插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install autojump<br>$ vim ~/.zshrc<br><span class="hljs-comment">#在最后一行加入</span><br>. /usr/share/autojump/autojump.sh<br>$ <span class="hljs-built_in">source</span> ~/.zshrc   生效<br></code></pre></td></tr></table></figure><h4 id="安装自动补齐插件"><a href="#安装自动补齐插件" class="headerlink" title="安装自动补齐插件"></a>安装自动补齐插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> ~/.oh-my-zsh/plugins/<br>$ mkdir incr<br>$ <span class="hljs-built_in">cd</span> incr<br>$ wget http://mimosa-pudica.net/src/incr-0.2.zsh<br>$ vim ~/.zshrc<br><span class="hljs-comment">#在最后加入 </span><br><span class="hljs-built_in">source</span> ~/.oh-my-zsh/plugins/incr/incr-0.2.zsh<br>$ <span class="hljs-built_in">source</span> ~/.zshrc 生效<br></code></pre></td></tr></table></figure><h4 id="安装语法高亮zsh-syntax-highlighting"><a href="#安装语法高亮zsh-syntax-highlighting" class="headerlink" title="安装语法高亮zsh-syntax-highlighting"></a>安装语法高亮zsh-syntax-highlighting</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> ~/.oh-my-zsh/plugins<br>$ vim ~/.zshrc<br>$ git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git<br><span class="hljs-comment">#在最后加入</span><br><span class="hljs-built_in">source</span> <span class="hljs-variable">$&#123;(q-)PWD&#125;</span>/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh<br>$ <span class="hljs-built_in">source</span> ~./zshrc<br></code></pre></td></tr></table></figure><h4 id="安装语法历史记录"><a href="#安装语法历史记录" class="headerlink" title="安装语法历史记录"></a>安装语法历史记录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> git://github.com/zsh-users/zsh-autosuggestions <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions<br>$ vim ~/.zshrc<br><span class="hljs-comment"># 修改</span><br>plugins=(git extract z zsh-autosuggestions)<br>$ <span class="hljs-built_in">source</span> ~/.xshrc<br></code></pre></td></tr></table></figure><p>现在终端好看了许多</p><hr><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> nanopi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nanopi </tag>
            
            <tag> oh my zsh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nanopi压力测试和散热能力</title>
      <link href="/nanopi-pressure-test/"/>
      <url>/nanopi-pressure-test/</url>
      
        <content type="html"><![CDATA[<p>上手nanopi后，一直好奇它的H5cpu性能怎么样和铝壳散热能力怎么样，下面我们来大概看一下。做一下压力测试。</p><hr><h3 id="安装两个软件"><a href="#安装两个软件" class="headerlink" title="安装两个软件"></a>安装两个软件</h3><hr><p>==stress==：对CPU施压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install stress<br></code></pre></td></tr></table></figure><a id="more"></a><p>==htop==:CPU监控</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install htop<br></code></pre></td></tr></table></figure><p>最好是更新一下系统。</p><hr><h3 id="开始测试"><a href="#开始测试" class="headerlink" title="开始测试"></a>开始测试</h3><hr><p>先连接一个ssh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo stress -c 4 -t 10000 -m 2 -d 2   <br>//4代表核数，10000代表时间,2代表内存进程，2代表硬盘进程<br>stress: info: [11352] dispatching hogs: 4 cpu, 0 io, 2 vm, 2 hdd<br></code></pre></td></tr></table></figure><p>内存和硬盘设置为2 个，如果设置为4 的话就会影响nanopi的ssh进程。</p><p>查看CPU情况，新打开一个SSH，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ htop<br></code></pre></td></tr></table></figure><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu1.png" alt></p><p>这是没有压力测试时候的情况，正常温度23左右，下面我们来进行压力测试。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi_cpu2.png" alt></p><p>一段时间后，温度稳定在60度，4个CPU均跑满了，内存用了一半。铝壳的散热现在还是压的住的。功率增加了一倍多。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo stress -c 4 -t 10000 -m 3 -d 2<br></code></pre></td></tr></table></figure><p>此时oled程序基本卡住，cpu跑满，内存700M左右，温度的话，铝壳散热是盖住了，大约70度，具体的就不知道了，oled显示已经乱了。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu3.png" alt></p><p>开始真正的烧机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo stress -c 4 -t 10000 -m 4 -d 4<br></code></pre></td></tr></table></figure><p>ssh已经开始连接不稳定，oled彻底罢工。温度还可以，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/cpu4.png" alt></p><p>作死跑了一个5cpu进程，还在运行，但其他进程已经不能正常工作了。</p><p>总体来说，这个nanopi还可以，铝壳散热完全盖的住。4核的H5也是完全ok。</p><hr><p>【参考】<a href="https://blog.csdn.net/qq_42869041/article/details/83834584" target="_blank" rel="noopener">https://blog.csdn.net/qq_42869041/article/details/83834584</a></p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> nanopi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nanopi </tag>
            
            <tag> H5 cpu </tag>
            
            <tag> 压力测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将静态博客托管在nanopi上</title>
      <link href="/blog-on-nanopi/"/>
      <url>/blog-on-nanopi/</url>
      
        <content type="html"><![CDATA[<p>最近买了一个nanopi，里面运行的是Ubuntu，可以做很多事情，我便想到用来做我博客的服务器。这前我是把我的博客托管在Github上。Github在国内的速度还是比较慢的。而且以前有被墙过。</p><hr><p>在nanopi上安装nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt install nginx<br></code></pre></td></tr></table></figure><a id="more"></a><p>编辑nginx的设置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ vim /etc/nginx/nginx.conf<br></code></pre></td></tr></table></figure><p>在http里面加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">server &#123;<br>                listen          80 default_server;<br>                server_name     ccbirds.cn;//自己的域名<br>                root            /home/fa/hexo-blog; //<span class="hljs-built_in">clone</span>下来的位置<br>                location / &#123;<br>                &#125;<br>        &#125;<br><br>        server &#123;<br>                listen          80;<br>                server_name     www.ccbirds.cn;<br>                <span class="hljs-built_in">return</span>          301 http://ccbirds.cn<span class="hljs-variable">$request_uri</span>;<br>        &#125;<br></code></pre></td></tr></table></figure><p>开启nginx服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo service nginx start  //启动命令<br>$ sudo service nginx stop   //停止命令<br>$ sudo service nginx restart  //重启命令<br></code></pre></td></tr></table></figure><p>如果报错，根据提示查看报错原因，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo nginx -t  //查看配置文件是否有问题<br>$ ps -ef | grep nginx  //显示nginx的进程<br>$ sudo <span class="hljs-built_in">kill</span> -quit 14952  //杀死进程<br></code></pre></td></tr></table></figure><p>现在使用IP或者域名就可以访问了。</p><hr><p>可是每次更新博客都要手动clone一下吗？</p><p>网上有使用webhooks自动部署的方法，不过本人比较笨，没有弄好，感兴趣的可以试试，成功了记得告诉我一声。</p><p>我采用了比较笨的一种方法，每天定时删除hexo-log，定时重新clone一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ crontab -e <br>//在最后加上两句<br>0 0 * * * sudo rm -rf /home/fa/hexo-blog  //每天零点删除hexo-blog<br>5 0 * * * sudo git <span class="hljs-built_in">clone</span> https://github.com/ccbirds/ccbirds.github.io.git /home/fa/hexo-blog  //每天零点五分 重新<span class="hljs-built_in">clone</span><br>$ sudo service cron restart  //重启cron<br>$ service cron restart<br></code></pre></td></tr></table></figure><p>五个* * * * *<br>对应的分别是 分 时 天 月 周</p><p>不是很完美，先这样吧。</p><hr><p>遇到的问题：</p><p>启动nginx时，报错，80端口已经被占用，看了一下进程，发现是nginx自己占用了80端口。使用nginx -t 看一下问题，是/etc/nginx/sites-enabled/default这个也在使用80端口，把这里的80改成其他端口就没有问题了</p><hr><p>欢迎大家访问！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> nanopi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nanopi </tag>
            
            <tag> 博客托管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markedown云笔记，typora+坚果云+picgo+github图床+阿里云图床</title>
      <link href="/markedown-typora-picgo-github-aliyun/"/>
      <url>/markedown-typora-picgo-github-aliyun/</url>
      
        <content type="html"><![CDATA[<p>平时在弄一些东西想记一些笔记，要不等弄完也就弄完了，几乎忘了怎么弄的，最好用笔记记录一下。首先尝试了一下印象笔记，免费用户可以两个设备同步，每个月还有流量限制，主要是照片比较多，一个月的流量很可能不来够，果断放弃。</p><p>考虑用markdown来记录一些东西，因为写博客也是用的markdown，写点代码什么的比较方便。上网搜了一下，使用typroa和坚果云可以实现云同步。typroa界面十分简洁清爽，非常舒服。坚果云的空间没有其他网盘大，但主打的是同步，每个月有1G的上传和3G的下载，对于只是同步 一下md文档，完全够用了。可是又有一个新的问题。图片怎么办？对于我这个时不时就截图的人来说，这个问题很致命。很巧typroa支持使用picgo上传图片。picgo是一个上传图片到图床的一个软件。图床的选择，免费的是Github，不过毕竟是免费的，大家都懂，七牛云，据说用的比较多，不过因为域名只能用一段时间，这后就需要使用自己备案过的域名，感觉不方便，所以考虑到阿里云和腾讯云，比较了一下，价钱的话差不多，实际上都用不了多少钱。个人感觉阿里云做的比较好。所以使用typora+坚果云+picgo+github图床+阿里云图床。这样即解决了笔记问题也解决了博客图床的问题。</p><p>最重要的是typroa、坚果云、picgo都是支持windows macos 和linux。</p><p>下面以windows为例介绍一下。</p><a id="more"></a><hr><h3 id="typroa"><a href="#typroa" class="headerlink" title="typroa"></a>typroa</h3><hr><p><a href="https://typora.io/" target="_blank" rel="noopener">下载地址</a></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroadownload.png" alt></p><p>选择对应的版本，下载安装。</p><p>安装后，打开 文件-&gt;偏好设置-&gt;图像</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-img1.png" alt></p><p>选择上传图片，上传服务选择PicGo（app），路径选择一会安装PicGo的路径。</p><p>其他设置，大家可以根据自己的喜好设置。</p><hr><h3 id="坚果云"><a href="#坚果云" class="headerlink" title="坚果云"></a>坚果云</h3><hr><p><a href="https://www.jianguoyun.com/s/downloads" target="_blank" rel="noopener">下载地址</a></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%B8%8B%E8%BD%BD.png" alt></p><p>选择对应的版本下载，安装（安装过程没有截图，大家按照提示安装就可以）。最后把typroa的md文件保存在坚果云的同步文件夹下就可以了。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%9D%9A%E6%9E%9C%E4%BA%91.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E5%9D%9A%E6%9E%9C%E4%BA%91%E5%90%8C%E6%AD%A5.png" alt></p><hr><h3 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h3><hr><p><a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener">下载地址</a></p><p>picgo是Github开源项目，大家下载自己需要的版本，其他平台大家可以参考文档安装。windows选择exe文件。安装后启动，刚开始不会有界面，右下角图标单击或者右键可以打开界面。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo%E2%80%94download.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo1.png" alt></p><p>到这里不要忘了去typroa上找一下picgo的安装路径。</p><hr><h3 id="Github图床"><a href="#Github图床" class="headerlink" title="Github图床"></a>Github图床</h3><hr><p><a href="https://github.com/" target="_blank" rel="noopener">github.com</a></p><p>新建一个仓库，用做图床。（一定要公开不要私密，要不别人看不到图片）</p><p>setting-&gt;developer setting-&gt;personal access tokens</p><p>点generate new token</p><p>note 随便填，下面不知道每个选项都是什么意思，跟我一样全选上。</p><p>最后generate token</p><p>记住生成的token秘钥，</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting1.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting2.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting3.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/github_setting4.png" alt></p><hr><p>打开picgo，选择Github图床。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-github.png" alt></p><p>仓库名：用户名/仓库名</p><p>分支名：master</p><p>token：刚才生成的token秘钥</p><p>存储路径：是仓库下新建一个文件夹来作为图床，后面要有/</p><p>自定义域名;<a href="https://raw.githubsercontent.com/用户名/仓库名/分支" target="_blank" rel="noopener">https://raw.githubsercontent.com/用户名/仓库名/分支</a></p><p>点确定即可。Github图床设置完成，可以上传一个图片试试。</p><p>Github主要是免费的，速度什么的就不行了。</p><hr><h3 id="阿里云图床"><a href="#阿里云图床" class="headerlink" title="阿里云图床"></a>阿里云图床</h3><hr><p><a href="https://cn.aliyun.com/" target="_blank" rel="noopener">阿里云网址</a></p><p>选择对象存储OSS，或者直接搜索也可以。购买的话，40GB一年才9元，现在买还有折扣，一年7.2元。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss1.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss2.png" alt></p><p>下单后，在控制台找到OSS。进入BUcket列表，创建bucket。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss3.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss5.png" alt></p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss6.png" alt></p><p>bucket的名称大家自己想一个。读写权限改为公共读。</p><p>确定。记住外网的两个域名。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss7.png" alt></p><p>下面来生成key。点击概览，右侧有一个常用入口，下面有一个Access Key。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss8.png" alt></p><p>进入后，点击   创建Accesskey   验证手机，会造成ID和key，最好是保存一下。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/aliyun_oss9.png" alt></p><hr><p>打开picgo，进入阿里云oss设置。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-aliyun.png" alt></p><p>keyid和keysecrect是刚才生成的ID和key。</p><p>存储空间名是bucket的名</p><p>存储区域是全世外网访问节点 去掉aliyuncs.com 前面的一串。</p><p>存储路径什么的大家根据自己的喜好来。</p><hr><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>typroa验证上传时，不成功</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa_upload.png" alt></p><p>原因：应该是typroa的端口与picgo的端口不对应。修改一下picgo的server端口就行。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/picgo-server.png" alt></p><p>测试一下，成功了。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/typroa-upload1.png" alt></p><hr><p>到这里就完事了！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> typroa </tag>
            
            <tag> picgo </tag>
            
            <tag> github 图床 </tag>
            
            <tag> 坚果云 </tag>
            
            <tag> 云笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nanopi_neo2_black_防烧屏设置</title>
      <link href="/nanopi_neo2_black_Anti-burn_screen/"/>
      <url>/nanopi_neo2_black_Anti-burn_screen/</url>
      
        <content type="html"><![CDATA[<p>oled长时间点亮一个点，付出现烧屏现象，为了避免烧屏。我们将oled设置为闪屏。</p><hr><p>关于oled模块驱动的安装，可以参考<a href="http://wiki.friendlyarm.com/wiki/index.php/NanoHat_OLED" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> https://github.com/friendlyarm/NanoHatOLED.git<br>$ <span class="hljs-built_in">cd</span> NanoHatOLED<br>$ sudo -H ./install.sh<br></code></pre></td></tr></table></figure><a id="more"></a><hr><h4 id="cd到oled源文件目录-修改两个文件"><a href="#cd到oled源文件目录-修改两个文件" class="headerlink" title="cd到oled源文件目录,修改两个文件"></a>cd到oled源文件目录,修改两个文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /root/NanoHatOLED/BakeBit/Software/Python<br>//使用python控制<br>$ sudo vim bakebit_nanohat_oled.py<br>//加入一条语句<br><span class="hljs-keyword">while</span> True:<br>    try:        <br>        oled.clear_raw() //加入这个语句，其他语句不变<br>        draw_page()<br>        lock.acquire()<br>        page_index = pageIndex<br>        lock.release()<br>   <br>$ sudo vim bakebit_128_64_oled.py<br>//加入下面的函数<br>def clear_raw():<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(8):<br>        setTextXY(0,j)    <br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(16):  <span class="hljs-comment">#clear all columns</span><br>            putChar(<span class="hljs-string">' '</span>)<br></code></pre></td></tr></table></figure><h4 id="清除原进程，启动新进程"><a href="#清除原进程，启动新进程" class="headerlink" title="清除原进程，启动新进程"></a>清除原进程，启动新进程</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ps aux | grep python //查看进程<br>root     25913  3.8  1.4  22380 14648 pts/0    S    14:23   0:35 python bakebit_nanohat_oled.py<br>pi       26617  0.0  0.0   7284   544 pts/0    S+   14:39   0:00 grep --color=auto python<br>$ sudo pkill -f bakebit_nanohat_oled.py <br>//结束进程<br>$ sudo python bakebit_nanohat_oled.py<br>// 重启进程 <br>$ sudo python bakebit_nanohat_oled.py &amp;<br>// 重启进程 后台运行<br></code></pre></td></tr></table></figure><hr><p>这样就不会烧屏了！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> nanopi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nanopi </tag>
            
            <tag> python </tag>
            
            <tag> oled </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nanopi neo2 black 音乐闹钟</title>
      <link href="/nanopi-neo2-black-Musical-alarm-clock/"/>
      <url>/nanopi-neo2-black-Musical-alarm-clock/</url>
      
        <content type="html"><![CDATA[<p>nanopi neo2 black 有音频接口，可以用它来放个音乐，折腾一下做个音乐闹钟吧。</p><hr><h3 id="首先查看cron是否运行"><a href="#首先查看cron是否运行" class="headerlink" title="首先查看cron是否运行"></a>首先查看cron是否运行</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ps -ef | grep cron //查看cron是否运行<br>root       561     1  0 15:52 ?        00:00:00 /usr/sbin/cron -f<br>pi       18668 18655  0 21:07 pts/0    00:00:00 grep --color=auto cron<br></code></pre></td></tr></table></figure><a id="more"></a><p>没有运行的话，启动一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo service cron start //启动命令<br>$ sudo service cron stop  //停止命令<br>$ sudo service cron restart  //重启命令<br></code></pre></td></tr></table></figure><hr><h3 id="设置定时播放音乐"><a href="#设置定时播放音乐" class="headerlink" title="设置定时播放音乐"></a>设置定时播放音乐</h3><hr><p>安装sox用来播放mp3音乐</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install sox libsox-fmt-all<br>//libsox-fmt-all包含解码器<br></code></pre></td></tr></table></figure><p>可以先播放一个音乐试试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ play XXX.mp3<br></code></pre></td></tr></table></figure><p>设置定时播放音乐</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ crontab -e //第一次使用会让你选择编辑器，选择vim就可以<br>//在文件末尾加<br>30 21 * * * play /home/pi/Music/XXX.mp3<br>//每天21:30播放音乐XXX.mp3<br></code></pre></td></tr></table></figure><p>五个* * * * *<br>对应的分别是 分 时 天 月 周<br>重启一个cron服务就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo service cron restart<br>$ service cron restart<br></code></pre></td></tr></table></figure><hr><p>大家每天定时听音乐吧！</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> nanopi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nanopi </tag>
            
            <tag> ubuntu </tag>
            
            <tag> 音乐闹钟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nanopi neo2 black 上电使用</title>
      <link href="/nanopi-neo2-black-power-on/"/>
      <url>/nanopi-neo2-black-power-on/</url>
      
        <content type="html"><![CDATA[<p>最近上手一个小东西，nanopi neo2 black，非常精致，可以运行linux core ，可以运行Ubuntu 内核，感兴趣可以淘宝，或者<a href="http://nanopi.org/" target="_blank" rel="noopener">官网</a>看看。</p><hr><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%801.png" alt></p><a id="more"></a><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%802.jpg" alt><br>我买这个板子的时候，赠送了16GB的TF卡，里面有系统，所以我没有编译系统，关于系统的制作可以参考官方<a href="http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2_Black#Configure_System_with_npi-config" target="_blank" rel="noopener">文档</a></p><hr><h3 id="1-通过ssh连接"><a href="#1-通过ssh连接" class="headerlink" title="1. 通过ssh连接"></a>1. 通过ssh连接</h3><hr><p>登录方式有有三种：串口、HDMI、ssh<br>串口需要使用debug UART引脚，然而板子出厂时这个引脚是不焊的，所以暂时没有办法使用串口登录。<br>HDMI是使用提供的模块，也是通过串口debug UART连接，所以暂时也无法使用。<br>只能使用SSH登录。<br>由于身边没有路由器，无法使用有线网络。只能使用无线网卡连接网络。<br>插上网卡，接上键盘，没有显示输出，只能盲打（大家如果能使用有线，nanopi会直接获取ip，就可以跳过这步了）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ su root<br>fa<br>$ nmcli r wifi on //打开wifi<br>$ nmcli dev //显示网络设备，无线网卡是wlan0<br>$ nmcli dev wifi //扫描wifi信号<br>$ nmcli dev wifi connect <span class="hljs-string">"SSID"</span> password <span class="hljs-string">"PASSWORD"</span> ifname wlan0 //连接无线网，SSID是无线网名称，PASSWORD是密码<br></code></pre></td></tr></table></figure><p>等一会就会从oled上看到IP了，使用xshell能过ssh就可以登录了，登录名pi，密码pi。root的密码fa。<br><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%803.png" alt><br>这样就连接成功了。</p><hr><h3 id="2-更新"><a href="#2-更新" class="headerlink" title="2. 更新"></a>2. 更新</h3><hr><p>更改更新源为国内源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo vim /etc/apt/sources.list<br>//加入以下源<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe<br>deb http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main multiverse restricted universe<br>deb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main multiverse restricted universe<br></code></pre></td></tr></table></figure><p>有点慢，大家耐心等待（也可以是我的网慢）<br>执行更新命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get update<br>$ sudo apt-get upgrade<br></code></pre></td></tr></table></figure><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/nanopi%E4%B8%804.png" alt></p><hr><h3 id="3-测网速"><a href="#3-测网速" class="headerlink" title="3.测网速"></a>3.测网速</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt install speedtest-cli //安装<br>$ sudo speedtest-cli //测试，有时可能测不出来<br>Retrieving speedtest.net configuration...<br>Retrieving speedtest.net server list...<br>Testing from China Mobile Guangdong (223.104.236.97)...<br>Selecting best server based on latency...<br>Hosted by ChinaMobile, Liaoning Branch,Dalian (Dalian) [247.24 km]: 75.654 ms<br>Testing download speed........................................<br>Download: 2.42 Mbit/s<br>Testing upload speed..................................................<br>Upload: 0.76 Mbit/s<br>我是热点连接，手机又被限速了所以很慢<br></code></pre></td></tr></table></figure><p>我是热点连接，手机又被限速了所以很慢</p><hr><p>大家可以为所欲为了，哈哈。</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> nanopi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nanopi </tag>
            
            <tag> ubuntu </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu下将文件备份到github</title>
      <link href="/Back-up-files-to-github-under-ubuntu/"/>
      <url>/Back-up-files-to-github-under-ubuntu/</url>
      
        <content type="html"><![CDATA[<p>将hexo博客目录备份到github，以防意外删除文件，这样也方便在其他设备上写博客</p><hr><h3 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1. 安装git"></a>1. 安装git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get install git<br></code></pre></td></tr></table></figure><a id="more"></a><h3 id="2-生成ssh-key"><a href="#2-生成ssh-key" class="headerlink" title="2.生成ssh key"></a>2.生成ssh key</h3><p>使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh-keygen -t rsa -C “github username”<br></code></pre></td></tr></table></figure><p>会生成下面三个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">id_rsa  id_rsa.pub  known_hosts<br></code></pre></td></tr></table></figure><h3 id="3-github-setting"><a href="#3-github-setting" class="headerlink" title="3.github setting"></a>3.github setting</h3><p>登录github，setting,左边有SSH and GPG keys 选项，点new<br>ssh key。title随便写，key 填写id_rsa.pub文件中的内容。<br>新建一个仓库用来备份。<br>测试ssh key是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh -T git@github.com<br>Hi ccbirds! You<span class="hljs-string">'ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure><h3 id="4-在需要备份的目录下初始化git"><a href="#4-在需要备份的目录下初始化git" class="headerlink" title="4.在需要备份的目录下初始化git"></a>4.在需要备份的目录下初始化git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git init<br>Reinitialized existing Git repository <span class="hljs-keyword">in</span> /home/czq/blog/.git/<br></code></pre></td></tr></table></figure><h3 id="5-设置git"><a href="#5-设置git" class="headerlink" title="5.设置git"></a>5.设置git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config user.name “github user name” <br>$ git config user.email “github email”<br>$ git config user.name //查看设置的name<br>$ git config user.email //查看设置的邮箱<br>$ git remote add origin https://github.com/ccbirds/hexo.git //github 仓库地址<br></code></pre></td></tr></table></figure><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Github1.png" alt><br>如果显示origin已经存在,删除origin，并重新设置origin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote rm origin <br>$ git remote add origin https://github.com/ccbirds/hexo.git<br></code></pre></td></tr></table></figure><h3 id="6-添加文件"><a href="#6-添加文件" class="headerlink" title="6.添加文件"></a>6.添加文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git add test.txt //指定一个文件<br>$ git add .    //目录下的所有文件<br>$ git commit -m <span class="hljs-string">"2020-02-27"</span> //备注<br>$ git push origin master<br>Username <span class="hljs-keyword">for</span> <span class="hljs-string">'https://github.com'</span>: ccbirds //输入用户名<br>Password <span class="hljs-keyword">for</span> <span class="hljs-string">'https://ccbirds@github.com'</span>:  //输入密码，密码不会显示<br>Writing objects: 100% (3/3), 277 bytes | 277.00 KiB/s, <span class="hljs-keyword">done</span>.<br>Total 3 (delta 0), reused 0 (delta 0)<br>To https://github.com/ccbirds/hexo.git<br>   da79977..341a1a4  master -&gt; master<br></code></pre></td></tr></table></figure><h3 id="这样就成功啦"><a href="#这样就成功啦" class="headerlink" title="这样就成功啦"></a>这样就成功啦</h3><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为使用hexo搭建的博客加入评论系统gitalk</title>
      <link href="/hexo-blog-gitalk/"/>
      <url>/hexo-blog-gitalk/</url>
      
        <content type="html"><![CDATA[<p>使用hexo结合github搭建自己的个人博客网站，非常方便，而且免费，对于个人来说是一个不错的选择。不过有一个缺点是没有评论系统。需要自己额外引入评论插件。<br>现在常用的评论插件有三种：<br>disqus：已经被墙了，暂时不考虑。<br>gitment：基于github的一个评论系统，但是作者长时间没有维护，需要使用自己的服务器。<br>gitalk：也是基于github的一个评论系统，目前可以正常使用。<br>主题不同添加gitalk的方法也略有区别，有的主题本身带有gitalk评论，打开相应的开关就可以。我使用的主题是beantech，本身没有gitalk评论系统。</p><a id="more"></a><hr><h2 id="1-注册"><a href="#1-注册" class="headerlink" title="1.注册"></a>1.注册</h2><hr><p><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">Register a new OAuth application</a><br><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk1.png" alt><br>Application name：随便写。<br>Homepage URL：网站主页的地址<br>Application description：随便写<br>Authorization callback URL：网站主页地址<br><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk2.png" alt><br>会生成Client ID与Client Secret。保存好后面会用到。<br><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk3.png" alt></p><hr><h2 id="2-配置gitalk"><a href="#2-配置gitalk" class="headerlink" title="2.配置gitalk"></a>2.配置gitalk</h2><hr><h3 id="创建md5-min-js文件"><a href="#创建md5-min-js文件" class="headerlink" title="创建md5.min.js文件"></a>创建md5.min.js文件</h3><p>在主题目录source/js中创建md5.min.js文件，内容如下（代码引用自其他文章，链接在文章下方）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs plain">! function(n) &#123;<br>    &quot;use strict&quot;;<br>    function t(n, t) &#123;<br>        var r &#x3D; (65535 &amp; n) + (65535 &amp; t);<br>        return (n &gt;&gt; 16) + (t &gt;&gt; 16) + (r &gt;&gt; 16) &lt;&lt; 16 | 65535 &amp; r<br>    &#125;<br>    function r(n, t) &#123;<br>        return n &lt;&lt; t | n &gt;&gt;&gt; 32 - t<br>    &#125;<br>    function e(n, e, o, u, c, f) &#123;<br>        return t(r(t(t(e, n), t(u, f)), c), o)<br>    &#125;<br>    function o(n, t, r, o, u, c, f) &#123;<br>        return e(t &amp; r | ~t &amp; o, n, t, u, c, f)<br>    &#125;<br>    function u(n, t, r, o, u, c, f) &#123;<br>        return e(t &amp; o | r &amp; ~o, n, t, u, c, f)<br>    &#125;<br>    function c(n, t, r, o, u, c, f) &#123;<br>        return e(t ^ r ^ o, n, t, u, c, f)<br>    &#125;<br>    function f(n, t, r, o, u, c, f) &#123;<br>        return e(r ^ (t | ~o), n, t, u, c, f)<br>    &#125;<br>    function i(n, r) &#123;<br>        n[r &gt;&gt; 5] |&#x3D; 128 &lt;&lt; r % 32, n[14 + (r + 64 &gt;&gt;&gt; 9 &lt;&lt; 4)] &#x3D; r;<br>        var e, i, a, d, h, l &#x3D; 1732584193,<br>            g &#x3D; -271733879,<br>            v &#x3D; -1732584194,<br>            m &#x3D; 271733878;<br>        for (e &#x3D; 0; e &lt; n.length; e +&#x3D; 16) i &#x3D; l, a &#x3D; g, d &#x3D; v, h &#x3D; m, g &#x3D; f(g &#x3D; f(g &#x3D; f(g &#x3D; f(g &#x3D; c(g &#x3D; c(g &#x3D; c(g &#x3D; c(g &#x3D; u(g &#x3D; u(g &#x3D; u(g &#x3D; u(g &#x3D; o(g &#x3D; o(g &#x3D; o(g &#x3D; o(g, v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e], 7, -680876936), g, v, n[e + 1], 12, -389564586), l, g, n[e + 2], 17, 606105819), m, l, n[e + 3], 22, -1044525330), v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e + 4], 7, -176418897), g, v, n[e + 5], 12, 1200080426), l, g, n[e + 6], 17, -1473231341), m, l, n[e + 7], 22, -45705983), v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e + 8], 7, 1770035416), g, v, n[e + 9], 12, -1958414417), l, g, n[e + 10], 17, -42063), m, l, n[e + 11], 22, -1990404162), v &#x3D; o(v, m &#x3D; o(m, l &#x3D; o(l, g, v, m, n[e + 12], 7, 1804603682), g, v, n[e + 13], 12, -40341101), l, g, n[e + 14], 17, -1502002290), m, l, n[e + 15], 22, 1236535329), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 1], 5, -165796510), g, v, n[e + 6], 9, -1069501632), l, g, n[e + 11], 14, 643717713), m, l, n[e], 20, -373897302), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 5], 5, -701558691), g, v, n[e + 10], 9, 38016083), l, g, n[e + 15], 14, -660478335), m, l, n[e + 4], 20, -405537848), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 9], 5, 568446438), g, v, n[e + 14], 9, -1019803690), l, g, n[e + 3], 14, -187363961), m, l, n[e + 8], 20, 1163531501), v &#x3D; u(v, m &#x3D; u(m, l &#x3D; u(l, g, v, m, n[e + 13], 5, -1444681467), g, v, n[e + 2], 9, -51403784), l, g, n[e + 7], 14, 1735328473), m, l, n[e + 12], 20, -1926607734), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 5], 4, -378558), g, v, n[e + 8], 11, -2022574463), l, g, n[e + 11], 16, 1839030562), m, l, n[e + 14], 23, -35309556), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 1], 4, -1530992060), g, v, n[e + 4], 11, 1272893353), l, g, n[e + 7], 16, -155497632), m, l, n[e + 10], 23, -1094730640), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 13], 4, 681279174), g, v, n[e], 11, -358537222), l, g, n[e + 3], 16, -722521979), m, l, n[e + 6], 23, 76029189), v &#x3D; c(v, m &#x3D; c(m, l &#x3D; c(l, g, v, m, n[e + 9], 4, -640364487), g, v, n[e + 12], 11, -421815835), l, g, n[e + 15], 16, 530742520), m, l, n[e + 2], 23, -995338651), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e], 6, -198630844), g, v, n[e + 7], 10, 1126891415), l, g, n[e + 14], 15, -1416354905), m, l, n[e + 5], 21, -57434055), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e + 12], 6, 1700485571), g, v, n[e + 3], 10, -1894986606), l, g, n[e + 10], 15, -1051523), m, l, n[e + 1], 21, -2054922799), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e + 8], 6, 1873313359), g, v, n[e + 15], 10, -30611744), l, g, n[e + 6], 15, -1560198380), m, l, n[e + 13], 21, 1309151649), v &#x3D; f(v, m &#x3D; f(m, l &#x3D; f(l, g, v, m, n[e + 4], 6, -145523070), g, v, n[e + 11], 10, -1120210379), l, g, n[e + 2], 15, 718787259), m, l, n[e + 9], 21, -343485551), l &#x3D; t(l, i), g &#x3D; t(g, a), v &#x3D; t(v, d), m &#x3D; t(m, h);<br>        return [l, g, v, m]<br>    &#125;<br><br>    function a(n) &#123;<br>        var t, r &#x3D; &quot;&quot;,<br>            e &#x3D; 32 * n.length;<br>        for (t &#x3D; 0; t &lt; e; t +&#x3D; 8) r +&#x3D; String.fromCharCode(n[t &gt;&gt; 5] &gt;&gt;&gt; t % 32 &amp; 255);<br>        return r<br>    &#125;<br><br>    function d(n) &#123;<br>        var t, r &#x3D; [];<br>        for (r[(n.length &gt;&gt; 2) - 1] &#x3D; void 0, t &#x3D; 0; t &lt; r.length; t +&#x3D; 1) r[t] &#x3D; 0;<br>        var e &#x3D; 8 * n.length;<br>        for (t &#x3D; 0; t &lt; e; t +&#x3D; 8) r[t &gt;&gt; 5] |&#x3D; (255 &amp; n.charCodeAt(t &#x2F; 8)) &lt;&lt; t % 32;<br>        return r<br>    &#125;<br><br>    function h(n) &#123;<br>        return a(i(d(n), 8 * n.length))<br>    &#125;<br><br>    function l(n, t) &#123;<br>        var r, e, o &#x3D; d(n),<br>            u &#x3D; [],<br>            c &#x3D; [];<br>        for (u[15] &#x3D; c[15] &#x3D; void 0, o.length &gt; 16 &amp;&amp; (o &#x3D; i(o, 8 * n.length)), r &#x3D; 0; r &lt; 16; r +&#x3D; 1) u[r] &#x3D; 909522486 ^ o[r], c[r] &#x3D; 1549556828 ^ o[r];<br>        return e &#x3D; i(u.concat(d(t)), 512 + 8 * t.length), a(i(c.concat(e), 640))<br>    &#125;<br><br>    function g(n) &#123;<br>        var t, r, e &#x3D; &quot;&quot;;<br>        for (r &#x3D; 0; r &lt; n.length; r +&#x3D; 1) t &#x3D; n.charCodeAt(r), e +&#x3D; &quot;0123456789abcdef&quot;.charAt(t &gt;&gt;&gt; 4 &amp; 15) + &quot;0123456789abcdef&quot;.charAt(15 &amp; t);<br>        return e<br>    &#125;<br>    function v(n) &#123;<br>        return unescape(encodeURIComponent(n))<br>    &#125;<br>    function m(n) &#123;<br>        return h(v(n))<br>    &#125;<br>    function p(n) &#123;<br>        return g(m(n))<br>    &#125;<br>    function s(n, t) &#123;<br>        return l(v(n), v(t))<br>    &#125;<br>    function C(n, t) &#123;<br>        return g(s(n, t))<br>    &#125;<br>    function A(n, t, r) &#123;<br>        return t ? r ? s(t, n) : C(t, n) : r ? m(n) : p(n)<br>    &#125;<br>    &quot;function&quot; &#x3D;&#x3D; typeof define &amp;&amp; define.amd ? define(function() &#123;<br>        return A<br>    &#125;) : &quot;object&quot; &#x3D;&#x3D; typeof module &amp;&amp; module.exports ? module.exports &#x3D; A : n.md5 &#x3D; A<br>&#125;(this);<br>&#x2F;&#x2F;# sourceMappingURL&#x3D;md5.min.js.map<br></code></pre></td></tr></table></figure><h3 id="在文章后面加入代码"><a href="#在文章后面加入代码" class="headerlink" title="在文章后面加入代码"></a>在文章后面加入代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs plain">&lt;div id&#x3D;&quot;gitalk-container&quot;&gt;&lt;&#x2F;div&gt;<br>&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.css&quot;&gt;<br>&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;<br>&lt;script src&#x3D;&quot;&#x2F;js&#x2F;md5.min.js&quot;&gt;&lt;&#x2F;script&gt;<br>&lt;script &gt;<br>var gitalk &#x3D; new Gitalk(&#123;<br>  clientID: &#39;GitHub Application Client ID&#39;,<br>  clientSecret: &#39;GitHub Application Client Secret&#39;,<br>  repo: &#39;GitHub repo&#39;,<br>  owner: &#39;GitHub repo owner&#39;,<br>  admin: [&#39;GitHub repo owner and collaborators, only these guys can initialize github issues&#39;],<br>  id: md5(location.pathname),      &#x2F;&#x2F; Ensure uniqueness and length less than 50<br>  distractionFreeMode: false  &#x2F;&#x2F; Facebook-like distraction free mode<br>&#125;)<br>gitalk.render(&#39;gitalk-container&#39;)<br>&lt;&#x2F;script&gt;<br></code></pre></td></tr></table></figure><p>clientID: 前面注册的clientID<br>clientSecret： 前面注册的clientSecret<br>repo： 保存评论的仓库名字，可以是XXX.github.io<br>owner： 仓库的拥有者，写自己的用户名就可以。<br>admin： 评论管理员，写自己的用户名就可以。<br>id： 按我写的不需要修改。一定要使用md5编码，不然会因为文章名字过长报错。<br>其他保持默认即可。</p><h3 id="gitalk初始化"><a href="#gitalk初始化" class="headerlink" title="gitalk初始化"></a>gitalk初始化</h3><p>将代码放到文章下方后，需要对gitalk初始化，gitalk不能自动初始化，手动初始化后，会在保存评论的仓库新建一个issue。<br><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/Gitalk4.png" alt><br>使用自己的github登录。会在仓库新建一个issue。</p><hr><p>这样就完成啦，比较简单。但是需要在每篇文章后面都加入代码，而且需要手动初始化。<br>可以在主题中加入gitalk，但是因为主题不同加入的方法也不同。<br>至于初始化，可以写个脚本自动初始化，正在学习中，后期和大家分享。如果大家有更好的方法，欢迎在评论中交流。</p><hr><p>参考文章：<br><a href="https://blog.csdn.net/am290333566/article/details/83714217" target="_blank" rel="noopener">https://blog.csdn.net/am290333566/article/details/83714217</a><br><a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md" target="_blank" rel="noopener">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a></p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> gitalk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机无线投屏win10</title>
      <link href="/Mobile-phone-wireless-projection-screen-win10/"/>
      <url>/Mobile-phone-wireless-projection-screen-win10/</url>
      
        <content type="html"><![CDATA[<p>手机上屏幕小，看视频特别难受，并且有些软件没与PC版，应该怎么办?下面我来介绍一种方法，将手机屏幕投屏到电脑上。</p><hr><p>条件：1.装有win10的PC。<br>2. 手机具有无线投屏功能（现在大多数手机都有无线投屏功能，只是名字可能有些不同，下面一以荣耀V10手机为例给大家演示）</p><a id="more"></a><hr><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><hr><h3 id="1-PC端"><a href="#1-PC端" class="headerlink" title="1.PC端"></a>1.PC端</h3><hr><h4 id="使用搜索命令搜索“连接”"><a href="#使用搜索命令搜索“连接”" class="headerlink" title="使用搜索命令搜索“连接”"></a>使用搜索命令搜索“连接”</h4><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F1.png" alt></p><h4 id="打开连接应用，"><a href="#打开连接应用，" class="headerlink" title="打开连接应用，"></a>打开连接应用，</h4><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F2.png" alt></p><h4 id="记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。"><a href="#记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。" class="headerlink" title="记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。"></a>记住你的无线投屏的名字，如果周围有多个设备时，不要选错哦。</h4><hr><h3 id="2-手机端"><a href="#2-手机端" class="headerlink" title="2.手机端"></a>2.手机端</h3><hr><h4 id="打开设置"><a href="#打开设置" class="headerlink" title="打开设置"></a>打开设置</h4><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F3.jpg" alt></p><h4 id="选择设备连接"><a href="#选择设备连接" class="headerlink" title="选择设备连接"></a>选择设备连接</h4><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F4.jpg" alt></p><h4 id="选择无线投屏功能"><a href="#选择无线投屏功能" class="headerlink" title="选择无线投屏功能"></a>选择无线投屏功能</h4><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F5.jpg" alt></p><h4 id="需要打开WLAN，它会搜索可使用设备。"><a href="#需要打开WLAN，它会搜索可使用设备。" class="headerlink" title="需要打开WLAN，它会搜索可使用设备。"></a>需要打开WLAN，它会搜索可使用设备。</h4><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F6.jpg" alt><br><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F7.jpg" alt></p><h4 id="选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。"><a href="#选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。" class="headerlink" title="选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。"></a>选择你的设备，不要选错哦。这样就就连接上了，看个视频试一下。</h4><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/%E6%8A%95%E5%B1%8F8.png" alt></p><h4 id="点右上角按钮，可以全屏。"><a href="#点右上角按钮，可以全屏。" class="headerlink" title="点右上角按钮，可以全屏。"></a>点右上角按钮，可以全屏。</h4><hr><p>大家赶紧去试试吧。<br>有问题可以联系我，邮箱：<a href="mailto:hanbing3566@gmail.com">hanbing3566@gmail.com</a></p><hr><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu中使用pycharm有些快捷键无法使用</title>
      <link href="/ubuntu-pycharm/"/>
      <url>/ubuntu-pycharm/</url>
      
        <content type="html"><![CDATA[<p>问题描述：在使用pycharm过程中，ctrl+c,ctrl+v,ctrl+d等快捷键无法使用。</p><p>解决办法：file-&gt;setting-&gt;Editor下面有一个Vim Emulation选项。</p><a id="more"></a><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm.png" alt><br>将Handler一列中的vim全部改为IDE，点Apply。</p><p><img src="https://ccbirds-blog.oss-cn-beijing.aliyuncs.com/blog_img/pycharm2.png" alt><br>这样，快捷键就可以正常使用啦。</p><p>博客网站  ：<br><a href="http://ccbirds.cn">ccbirds.cn</a><br><a href="https://ccbirds.github.io/" target="_blank" rel="noopener">ccbirds.github.io</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> ubuntu </tag>
            
            <tag> pcharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo] Theme BeanTech</title>
      <link href="/Theme-BeanTech/"/>
      <url>/Theme-BeanTech/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Ported Theme of <a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener">Hux Blog</a>, Thank <a href="https://github.com/Huxpro" target="_blank" rel="noopener">Huxpro</a> for designing such a flawless theme.</p><p>This BeanTech theme created by <a href="http://beantech.org" target="_blank" rel="noopener">YuHsuan</a> modified from the original Porter <a href="http://kaijun.rocks/hexo-theme-huxblog/" target="_blank" rel="noopener">Kaijun</a></p></blockquote><h1 id="Live-Demo"><a href="#Live-Demo" class="headerlink" title="Live Demo"></a><a href="http://beantech.org" target="_blank" rel="noopener">Live Demo</a></h1><hr><p><img src="http://beantech.org/img/beantech-desktop.png" alt="BeanTech Desktop"></p><h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><hr><p>I publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!</p><p>Let’s begin!!!</p><h2 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h2><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech<br><span class="hljs-built_in">cd</span> hexo-beantech<br>npm install<br></code></pre></td></tr></table></figure><h2 id="Modify"><a href="#Modify" class="headerlink" title="Modify"></a>Modify</h2><hr><p>Modify <code>_config.yml</code> file with your own info.<br>Especially the section:</p><h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><p>Replace to your own repo!</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">&lt;your-branch&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Sidebar-settings"><a href="#Sidebar-settings" class="headerlink" title="Sidebar settings"></a>Sidebar settings</h3><p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">sidebar:</span> <span class="hljs-literal">true</span>    <span class="hljs-comment"># whether or not using Sidebar.</span><br><span class="hljs-attr">sidebar-about-description:</span> <span class="hljs-string">"&lt;your description&gt;"</span><br><span class="hljs-attr">sidebar-avatar:</span> <span class="hljs-string">img/&lt;your</span> <span class="hljs-string">avatar</span> <span class="hljs-string">path&gt;</span><br></code></pre></td></tr></table></figure><p>and activate your personal widget you like</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">widgets:</span>         <span class="hljs-comment"># here are widget you can use, you can comment out</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">featured-tags</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">short-about</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">recent-posts</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">friends-blog</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">archive</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">category</span><br></code></pre></td></tr></table></figure><p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p><h3 id="Signature-Setup"><a href="#Signature-Setup" class="headerlink" title="Signature Setup"></a>Signature Setup</h3><p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">signature:</span> <span class="hljs-literal">true</span>   <span class="hljs-comment"># show signature</span><br><span class="hljs-attr">signature-img:</span> <span class="hljs-string">img/signature/&lt;your-signature-ID&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Go-to-top-icon-Setup"><a href="#Go-to-top-icon-Setup" class="headerlink" title="Go to top icon Setup"></a>Go to top icon Setup</h3><p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p><h3 id="Post-tag"><a href="#Post-tag" class="headerlink" title="Post tag"></a>Post tag</h3><p>You can decide to show post tags or not.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">home_posts_tag:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><img src="/.cn//home_posts_tag-true.png" alt="home_posts_tag-true"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">home_posts_tag:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p><img src="/.cn//home_posts_tag-false.png" alt="home_posts_tag-false"></p><h3 id="Markdown-render"><a href="#Markdown-render" class="headerlink" title="Markdown render"></a>Markdown render</h3><p>My markdown render engine plugin is <a href="https://github.com/celsomiranda/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a>.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Markdown-it config</span><br><span class="hljs-comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span><br><span class="hljs-attr">markdown:</span><br>  <span class="hljs-attr">render:</span><br>    <span class="hljs-attr">html:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">xhtmlOut:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">breaks:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">linkify:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">typographer:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">quotes:</span> <span class="hljs-string">'“”‘’'</span><br></code></pre></td></tr></table></figure><p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span>(<span class="hljs-string">"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js"</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        anchors.options = &#123;<br>          <span class="hljs-attr">visible</span>: <span class="hljs-string">'hover'</span>,<br>          <span class="hljs-attr">placement</span>: <span class="hljs-string">'left'</span>,<br>          <span class="hljs-attr">icon</span>: ℬ <span class="hljs-comment">// this is the header anchor "unicode" icon</span><br>        &#125;;<br></code></pre></td></tr></table></figure><h2 id="Hexo-Basics"><a href="#Hexo-Basics" class="headerlink" title="Hexo Basics"></a>Hexo Basics</h2><hr><p>Some hexo command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new post <span class="hljs-string">"&lt;post name&gt;"</span> <span class="hljs-comment"># you can change post to another layout if you want</span><br>hexo clean &amp;&amp; hexo generate <span class="hljs-comment"># generate the static file</span><br>hexo server <span class="hljs-comment"># run hexo in local environment</span><br>hexo deploy <span class="hljs-comment"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span><br></code></pre></td></tr></table></figure><h1 id="Have-fun"><a href="#Have-fun" class="headerlink" title="Have fun ^_^"></a>Have fun ^_^</h1><hr><!-- Place this tag in your head or just before your close body tag. --><script async defer src="https://buttons.github.io/buttons.js"></script><!-- Place this tag where you want the button to render. --><p>Please <a class="github-button" href="https://github.com/YenYuHsuan/hexo-theme-beantech" target="_blank" rel="noopener" data-icon="octicon-star" aria-label="Star YenYuHsuan/hexo-theme-beantech on GitHub">Star</a> this Project if you like it! <a class="github-button" href="https://github.com/YenYuHsuan" target="_blank" rel="noopener" aria-label="Follow @YenYuHsuan on GitHub">Follow</a> would also be appreciated!<br>Peace!</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
